{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "Boolean",
          "kind": "SCALAR",
          "description": "Represents `true` or `false` values.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "String",
          "kind": "SCALAR",
          "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Query",
          "kind": "OBJECT",
          "description": "The query root of GitHub's GraphQL interface.",
          "fields": [
            {
              "name": "codeOfConduct",
              "description": "Look up a code of conduct by its key",
              "type": {
                "name": "CodeOfConduct"
              }
            },
            {
              "name": "codesOfConduct",
              "description": "Look up a code of conduct by its key",
              "type": {
                "name": null
              }
            },
            {
              "name": "license",
              "description": "Look up an open source license by its key",
              "type": {
                "name": "License"
              }
            },
            {
              "name": "licenses",
              "description": "Return a list of known open source licenses",
              "type": {
                "name": null
              }
            },
            {
              "name": "marketplaceCategories",
              "description": "Get alphabetically sorted list of Marketplace categories",
              "type": {
                "name": null
              }
            },
            {
              "name": "marketplaceCategory",
              "description": "Look up a Marketplace category by its slug.",
              "type": {
                "name": "MarketplaceCategory"
              }
            },
            {
              "name": "marketplaceListing",
              "description": "Look up a single Marketplace listing",
              "type": {
                "name": "MarketplaceListing"
              }
            },
            {
              "name": "marketplaceListings",
              "description": "Look up Marketplace listings",
              "type": {
                "name": null
              }
            },
            {
              "name": "meta",
              "description": "Return information about the GitHub instance",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "Fetches an object given its ID.",
              "type": {
                "name": "Node"
              }
            },
            {
              "name": "nodes",
              "description": "Lookup nodes by a list of IDs.",
              "type": {
                "name": null
              }
            },
            {
              "name": "organization",
              "description": "Lookup a organization by login.",
              "type": {
                "name": "Organization"
              }
            },
            {
              "name": "rateLimit",
              "description": "The client's rate limit information.",
              "type": {
                "name": "RateLimit"
              }
            },
            {
              "name": "relay",
              "description": "Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "Lookup a given repository by the owner and repository name.",
              "type": {
                "name": "Repository"
              }
            },
            {
              "name": "repositoryOwner",
              "description": "Lookup a repository owner (ie. either a User or an Organization) by login.",
              "type": {
                "name": "RepositoryOwner"
              }
            },
            {
              "name": "resource",
              "description": "Lookup resource by a URL.",
              "type": {
                "name": "UniformResourceLocatable"
              }
            },
            {
              "name": "search",
              "description": "Perform a search across resources.",
              "type": {
                "name": null
              }
            },
            {
              "name": "topic",
              "description": "Look up a topic by name.",
              "type": {
                "name": "Topic"
              }
            },
            {
              "name": "user",
              "description": "Lookup a user by login.",
              "type": {
                "name": "User"
              }
            },
            {
              "name": "viewer",
              "description": "The currently authenticated user.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Node",
          "kind": "INTERFACE",
          "description": "An object with an ID.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the object.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "ID",
          "kind": "SCALAR",
          "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UniformResourceLocatable",
          "kind": "INTERFACE",
          "description": "Represents a type that can be retrieved by a URL.",
          "fields": [
            {
              "name": "resourcePath",
              "description": "The HTML path to this resource.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The URL to this resource.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "URI",
          "kind": "SCALAR",
          "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "User",
          "kind": "OBJECT",
          "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
          "fields": [
            {
              "name": "avatarUrl",
              "description": "A URL pointing to the user's public avatar.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bio",
              "description": "The user's public profile bio.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "bioHTML",
              "description": "The user's public profile bio as HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitComments",
              "description": "A list of commit comments made by this user.",
              "type": {
                "name": null
              }
            },
            {
              "name": "company",
              "description": "The user's public profile company.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "companyHTML",
              "description": "The user's public profile company as HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "email",
              "description": "The user's publicly visible profile email.",
              "type": {
                "name": null
              }
            },
            {
              "name": "followers",
              "description": "A list of users the given user is followed by.",
              "type": {
                "name": null
              }
            },
            {
              "name": "following",
              "description": "A list of users the given user is following.",
              "type": {
                "name": null
              }
            },
            {
              "name": "gist",
              "description": "Find gist by repo name.",
              "type": {
                "name": "Gist"
              }
            },
            {
              "name": "gistComments",
              "description": "A list of gist comments made by this user.",
              "type": {
                "name": null
              }
            },
            {
              "name": "gists",
              "description": "A list of the Gists the user has created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isBountyHunter",
              "description": "Whether or not this user is a participant in the GitHub Security Bug Bounty.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isCampusExpert",
              "description": "Whether or not this user is a participant in the GitHub Campus Experts Program.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isDeveloperProgramMember",
              "description": "Whether or not this user is a GitHub Developer Program member.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isEmployee",
              "description": "Whether or not this user is a GitHub employee.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isHireable",
              "description": "Whether or not the user has marked themselves as for hire.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isSiteAdmin",
              "description": "Whether or not this user is a site administrator.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isViewer",
              "description": "Whether or not this user is the viewing user.",
              "type": {
                "name": null
              }
            },
            {
              "name": "issueComments",
              "description": "A list of issue comments made by this user.",
              "type": {
                "name": null
              }
            },
            {
              "name": "issues",
              "description": "A list of issues assocated with this user.",
              "type": {
                "name": null
              }
            },
            {
              "name": "location",
              "description": "The user's public profile location.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "login",
              "description": "The username used to login.",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The user's public profile name.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "organization",
              "description": "Find an organization by its login that the user belongs to.",
              "type": {
                "name": "Organization"
              }
            },
            {
              "name": "organizations",
              "description": "A list of organizations the user belongs to.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pinnedRepositories",
              "description": "A list of repositories this user has pinned to their profile",
              "type": {
                "name": null
              }
            },
            {
              "name": "publicKeys",
              "description": "A list of public keys associated with this user.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequests",
              "description": "A list of pull requests assocated with this user.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositories",
              "description": "A list of repositories that the user owns.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositoriesContributedTo",
              "description": "A list of repositories that the user recently contributed to.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "Find Repository.",
              "type": {
                "name": "Repository"
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this user",
              "type": {
                "name": null
              }
            },
            {
              "name": "starredRepositories",
              "description": "Repositories the user has starred.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this user",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanFollow",
              "description": "Whether or not the viewer is able to follow the user.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerIsFollowing",
              "description": "Whether or not this user is followed by the viewer.",
              "type": {
                "name": null
              }
            },
            {
              "name": "watching",
              "description": "A list of repositories the given user is watching.",
              "type": {
                "name": null
              }
            },
            {
              "name": "websiteUrl",
              "description": "A URL pointing to the user's public website/blog.",
              "type": {
                "name": "URI"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Actor",
              "description": "Represents an object which can take actions on GitHub. Typically a User or Bot.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryOwner",
              "description": "Represents an owner of a Repository.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Actor",
          "kind": "INTERFACE",
          "description": "Represents an object which can take actions on GitHub. Typically a User or Bot.",
          "fields": [
            {
              "name": "avatarUrl",
              "description": "A URL pointing to the actor's public avatar.",
              "type": {
                "name": null
              }
            },
            {
              "name": "login",
              "description": "The username of the actor.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this actor.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this actor.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "Int",
          "kind": "SCALAR",
          "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Repository",
          "kind": "OBJECT",
          "description": "A repository contains the content for a project.",
          "fields": [
            {
              "name": "assignableUsers",
              "description": "A list of users that can be assigned to issues in this repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "codeOfConduct",
              "description": "Returns the code of conduct for this repository",
              "type": {
                "name": "CodeOfConduct"
              }
            },
            {
              "name": "collaborators",
              "description": "A list of collaborators associated with the repository.",
              "type": {
                "name": "RepositoryCollaboratorConnection"
              }
            },
            {
              "name": "commitComments",
              "description": "A list of commit comments associated with the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "defaultBranchRef",
              "description": "The Ref associated with the repository's default branch.",
              "type": {
                "name": "Ref"
              }
            },
            {
              "name": "deployKeys",
              "description": "A list of deploy keys that are on this repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "deployments",
              "description": "Deployments associated with the repository",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "The description of the repository.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "descriptionHTML",
              "description": "The description of the repository rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "diskUsage",
              "description": "The number of kilobytes this repository occupies on disk.",
              "type": {
                "name": "Int"
              }
            },
            {
              "name": "forkCount",
              "description": "Returns how many forks there are of this repository in the whole network.",
              "type": {
                "name": null
              }
            },
            {
              "name": "forks",
              "description": "A list of direct forked repositories.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasIssuesEnabled",
              "description": "Indicates if the repository has issues feature enabled.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasWikiEnabled",
              "description": "Indicates if the repository has wiki feature enabled.",
              "type": {
                "name": null
              }
            },
            {
              "name": "homepageUrl",
              "description": "The repository's URL.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isArchived",
              "description": "Indicates if the repository is unmaintained.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isFork",
              "description": "Identifies if the repository is a fork.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isLocked",
              "description": "Indicates if the repository has been locked or not.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isMirror",
              "description": "Identifies if the repository is a mirror.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isPrivate",
              "description": "Identifies if the repository is private.",
              "type": {
                "name": null
              }
            },
            {
              "name": "issue",
              "description": "Returns a single issue from the current repository by number.",
              "type": {
                "name": "Issue"
              }
            },
            {
              "name": "issueOrPullRequest",
              "description": "Returns a single issue-like object from the current repository by number.",
              "type": {
                "name": "IssueOrPullRequest"
              }
            },
            {
              "name": "issues",
              "description": "A list of issues that have been opened in the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "label",
              "description": "Returns a single label by name",
              "type": {
                "name": "Label"
              }
            },
            {
              "name": "labels",
              "description": "A list of labels associated with the repository.",
              "type": {
                "name": "LabelConnection"
              }
            },
            {
              "name": "languages",
              "description": "A list containing a breakdown of the language composition of the repository.",
              "type": {
                "name": "LanguageConnection"
              }
            },
            {
              "name": "licenseInfo",
              "description": "The license associated with the repository",
              "type": {
                "name": "License"
              }
            },
            {
              "name": "lockReason",
              "description": "The reason the repository has been locked.",
              "type": {
                "name": "RepositoryLockReason"
              }
            },
            {
              "name": "mentionableUsers",
              "description": "A list of Users that can be mentioned in the context of the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "milestone",
              "description": "Returns a single milestone from the current repository by number.",
              "type": {
                "name": "Milestone"
              }
            },
            {
              "name": "milestones",
              "description": "A list of milestones associated with the repository.",
              "type": {
                "name": "MilestoneConnection"
              }
            },
            {
              "name": "mirrorUrl",
              "description": "The repository's original mirror URL.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "name",
              "description": "The name of the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nameWithOwner",
              "description": "The repository's name with owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "object",
              "description": "A Git object in the repository",
              "type": {
                "name": "GitObject"
              }
            },
            {
              "name": "owner",
              "description": "The User owner of the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "parent",
              "description": "The repository parent, if this is a fork.",
              "type": {
                "name": "Repository"
              }
            },
            {
              "name": "primaryLanguage",
              "description": "The primary language of the repository's code.",
              "type": {
                "name": "Language"
              }
            },
            {
              "name": "project",
              "description": "Find project by number.",
              "type": {
                "name": "Project"
              }
            },
            {
              "name": "projects",
              "description": "A list of projects under the owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "projectsResourcePath",
              "description": "The HTTP path listing repository's projects",
              "type": {
                "name": null
              }
            },
            {
              "name": "projectsUrl",
              "description": "The HTTP URL listing repository's projects",
              "type": {
                "name": null
              }
            },
            {
              "name": "protectedBranches",
              "description": "A list of protected branches that are on this repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "Returns a single pull request from the current repository by number.",
              "type": {
                "name": "PullRequest"
              }
            },
            {
              "name": "pullRequests",
              "description": "A list of pull requests that have been opened in the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pushedAt",
              "description": "Identifies when the repository was last pushed to.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "ref",
              "description": "Fetch a given ref from the repository",
              "type": {
                "name": "Ref"
              }
            },
            {
              "name": "refs",
              "description": "Fetch a list of refs from the repository",
              "type": {
                "name": "RefConnection"
              }
            },
            {
              "name": "release",
              "description": "Lookup a single release given various criteria.",
              "type": {
                "name": "Release"
              }
            },
            {
              "name": "releases",
              "description": "List of releases which are dependent on this repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositoryTopics",
              "description": "A list of applied repository-topic associations for this repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this repository",
              "type": {
                "name": null
              }
            },
            {
              "name": "shortDescriptionHTML",
              "description": "A description of the repository, rendered to HTML without any links in it.",
              "type": {
                "name": null
              }
            },
            {
              "name": "sshUrl",
              "description": "The SSH URL to clone this repository",
              "type": {
                "name": null
              }
            },
            {
              "name": "stargazers",
              "description": "A list of users who have starred this starrable.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this repository",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanAdminister",
              "description": "Indicates whether the viewer has admin permissions on this repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanCreateProjects",
              "description": "Can the current viewer create new projects on this owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanSubscribe",
              "description": "Check if the viewer is able to change their subscription status for the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdateTopics",
              "description": "Indicates whether the viewer can update the topics of this repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerHasStarred",
              "description": "Returns a boolean indicating whether the viewing user has starred this starrable.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerPermission",
              "description": "The users permission level on the repository. Will return null if authenticated as an GitHub App.",
              "type": {
                "name": "RepositoryPermission"
              }
            },
            {
              "name": "viewerSubscription",
              "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.",
              "type": {
                "name": null
              }
            },
            {
              "name": "watchers",
              "description": "A list of users watching the repository.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "ProjectOwner",
              "description": "Represents an owner of a Project.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Subscribable",
              "description": "Entities that can be subscribed to for web and email notifications.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Starrable",
              "description": "Things that can be starred.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryInfo",
              "description": "A subset of repository info.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ProjectOwner",
          "kind": "INTERFACE",
          "description": "Represents an owner of a Project.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "project",
              "description": "Find project by number.",
              "type": {
                "name": "Project"
              }
            },
            {
              "name": "projects",
              "description": "A list of projects under the owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "projectsResourcePath",
              "description": "The HTTP path listing owners projects",
              "type": {
                "name": null
              }
            },
            {
              "name": "projectsUrl",
              "description": "The HTTP URL listing owners projects",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanCreateProjects",
              "description": "Can the current viewer create new projects on this owner.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "Project",
          "kind": "OBJECT",
          "description": "Projects manage issues, pull requests and notes within a project owner.",
          "fields": [
            {
              "name": "body",
              "description": "The project's description body.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "bodyHTML",
              "description": "The projects description body rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "closed",
              "description": "`true` if the object is closed (definition of closed may depend on type)",
              "type": {
                "name": null
              }
            },
            {
              "name": "closedAt",
              "description": "Identifies the date and time when the object was closed.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "columns",
              "description": "List of columns in the project",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "creator",
              "description": "The actor who originally created the project.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The project's name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "number",
              "description": "The project's number.",
              "type": {
                "name": null
              }
            },
            {
              "name": "owner",
              "description": "The project's owner. Currently limited to repositories and organizations.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pendingCards",
              "description": "List of pending cards in this project",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this project",
              "type": {
                "name": null
              }
            },
            {
              "name": "state",
              "description": "Whether the project is open or closed.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this project",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Closable",
              "description": "An object that can be closed",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Updatable",
              "description": "Entities that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Closable",
          "kind": "INTERFACE",
          "description": "An object that can be closed",
          "fields": [
            {
              "name": "closed",
              "description": "`true` if the object is closed (definition of closed may depend on type)",
              "type": {
                "name": null
              }
            },
            {
              "name": "closedAt",
              "description": "Identifies the date and time when the object was closed.",
              "type": {
                "name": "DateTime"
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "DateTime",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded UTC date string.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Updatable",
          "kind": "INTERFACE",
          "description": "Entities that can be updated.",
          "fields": [
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "ProjectState",
          "kind": "ENUM",
          "description": "State of the project; either 'open' or 'closed'",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "HTML",
          "kind": "SCALAR",
          "description": "A string containing HTML code.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ProjectColumnConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProjectColumn.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ProjectColumnEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "ProjectColumn"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ProjectColumn",
          "kind": "OBJECT",
          "description": "A column inside a project.",
          "fields": [
            {
              "name": "cards",
              "description": "List of cards in the column",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The project column's name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "project",
              "description": "The project that contains this column.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this project column",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this project column",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ProjectCardConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProjectCard.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ProjectCardEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "ProjectCard"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ProjectCard",
          "kind": "OBJECT",
          "description": "A card in a project.",
          "fields": [
            {
              "name": "column",
              "description": "The project column this card is associated under. A card may only belong to one\nproject column at a time. The column field will be null if the card is created\nin a pending state and has yet to be associated with a column. Once cards are\nassociated with a column, they will not become pending in the future.\n",
              "type": {
                "name": "ProjectColumn"
              }
            },
            {
              "name": "content",
              "description": "The card content item",
              "type": {
                "name": "ProjectCardItem"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "creator",
              "description": "The actor who created this card",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "note",
              "description": "The card note",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "project",
              "description": "The project that contains this card.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this card",
              "type": {
                "name": null
              }
            },
            {
              "name": "state",
              "description": "The state of ProjectCard",
              "type": {
                "name": "ProjectCardState"
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this card",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ProjectCardState",
          "kind": "ENUM",
          "description": "Various content states of a ProjectCard",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ProjectCardItem",
          "kind": "UNION",
          "description": "Types that can be inside Project Cards.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Issue",
          "kind": "OBJECT",
          "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
          "fields": [
            {
              "name": "activeLockReason",
              "description": "Reason that the conversation was locked.",
              "type": {
                "name": "LockReason"
              }
            },
            {
              "name": "assignees",
              "description": "A list of Users assigned to this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "author",
              "description": "The actor who authored the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "authorAssociation",
              "description": "Author's association with the subject of the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "body",
              "description": "Identifies the body of the issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyHTML",
              "description": "Identifies the body of the issue rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyText",
              "description": "Identifies the body of the issue rendered to text.",
              "type": {
                "name": null
              }
            },
            {
              "name": "closed",
              "description": "`true` if the object is closed (definition of closed may depend on type)",
              "type": {
                "name": null
              }
            },
            {
              "name": "closedAt",
              "description": "Identifies the date and time when the object was closed.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "comments",
              "description": "A list of comments associated with the Issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "labels",
              "description": "A list of labels associated with the object.",
              "type": {
                "name": "LabelConnection"
              }
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "locked",
              "description": "`true` if the object is locked",
              "type": {
                "name": null
              }
            },
            {
              "name": "milestone",
              "description": "Identifies the milestone associated with the issue.",
              "type": {
                "name": "Milestone"
              }
            },
            {
              "name": "number",
              "description": "Identifies the issue number.",
              "type": {
                "name": null
              }
            },
            {
              "name": "participants",
              "description": "A list of Users that are participating in the Issue conversation.",
              "type": {
                "name": null
              }
            },
            {
              "name": "projectCards",
              "description": "List of project cards associated with this issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies when the comment was published at.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this issue",
              "type": {
                "name": null
              }
            },
            {
              "name": "state",
              "description": "Identifies the state of the issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "timeline",
              "description": "A list of events, comments, commits, etc. associated with the issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "title",
              "description": "Identifies the issue title.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this issue",
              "type": {
                "name": null
              }
            },
            {
              "name": "userContentEdits",
              "description": "A list of edits to this content.",
              "type": {
                "name": "UserContentEditConnection"
              }
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanSubscribe",
              "description": "Check if the viewer is able to change their subscription status for the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCannotUpdateReasons",
              "description": "Reasons why the current viewer can not update this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerSubscription",
              "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Assignable",
              "description": "An object that can have users assigned to it.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Closable",
              "description": "An object that can be closed",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Comment",
              "description": "Represents a comment.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Updatable",
              "description": "Entities that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UpdatableComment",
              "description": "Comments that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Labelable",
              "description": "An object that can have labels assigned to it.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Lockable",
              "description": "An object that can be locked.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Subscribable",
              "description": "Entities that can be subscribed to for web and email notifications.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Assignable",
          "kind": "INTERFACE",
          "description": "An object that can have users assigned to it.",
          "fields": [
            {
              "name": "assignees",
              "description": "A list of Users assigned to this object.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "UserConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UserEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "User"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PageInfo",
          "kind": "OBJECT",
          "description": "Information about pagination in a connection.",
          "fields": [
            {
              "name": "endCursor",
              "description": "When paginating forwards, the cursor to continue.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "hasNextPage",
              "description": "When paginating forwards, are there more items?",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasPreviousPage",
              "description": "When paginating backwards, are there more items?",
              "type": {
                "name": null
              }
            },
            {
              "name": "startCursor",
              "description": "When paginating backwards, the cursor to continue.",
              "type": {
                "name": "String"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Comment",
          "kind": "INTERFACE",
          "description": "Represents a comment.",
          "fields": [
            {
              "name": "author",
              "description": "The actor who authored the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "authorAssociation",
              "description": "Author's association with the subject of the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "body",
              "description": "The comment body as Markdown.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyHTML",
              "description": "The comment body rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies when the comment was published at.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "userContentEdits",
              "description": "A list of edits to this content.",
              "type": {
                "name": "UserContentEditConnection"
              }
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "UserContentEditConnection",
          "kind": "OBJECT",
          "description": "A list of edits to content.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UserContentEditEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "UserContentEdit"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UserContentEdit",
          "kind": "OBJECT",
          "description": "An edit on user content",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited this content,",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "CommentAuthorAssociation",
          "kind": "ENUM",
          "description": "A comment author association with repository.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UpdatableComment",
          "kind": "INTERFACE",
          "description": "Comments that can be updated.",
          "fields": [
            {
              "name": "viewerCannotUpdateReasons",
              "description": "Reasons why the current viewer can not update this comment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "CommentCannotUpdateReason",
          "kind": "ENUM",
          "description": "The possible errors that will prevent a user from updating a comment.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Labelable",
          "kind": "INTERFACE",
          "description": "An object that can have labels assigned to it.",
          "fields": [
            {
              "name": "labels",
              "description": "A list of labels associated with the object.",
              "type": {
                "name": "LabelConnection"
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "LabelConnection",
          "kind": "OBJECT",
          "description": "The connection type for Label.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "LabelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Label"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Label",
          "kind": "OBJECT",
          "description": "A label for categorizing Issues or Milestones with a given Repository.",
          "fields": [
            {
              "name": "color",
              "description": "Identifies the label color.",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "A brief description of this label.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isDefault",
              "description": "Indicates whether or not this is a default label.",
              "type": {
                "name": null
              }
            },
            {
              "name": "issues",
              "description": "A list of issues associated with this label.",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "Identifies the label name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequests",
              "description": "A list of pull requests associated with this label.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this label.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "IssueConnection",
          "kind": "OBJECT",
          "description": "The connection type for Issue.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "IssueEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Issue"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "IssueOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of issues can be ordered upon return.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "IssueOrderField",
          "kind": "ENUM",
          "description": "Properties by which issue connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "OrderDirection",
          "kind": "ENUM",
          "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "IssueState",
          "kind": "ENUM",
          "description": "The possible states of an issue.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PullRequestConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequest.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "PullRequest"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequest",
          "kind": "OBJECT",
          "description": "A repository pull request.",
          "fields": [
            {
              "name": "activeLockReason",
              "description": "Reason that the conversation was locked.",
              "type": {
                "name": "LockReason"
              }
            },
            {
              "name": "additions",
              "description": "The number of additions in this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "assignees",
              "description": "A list of Users assigned to this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "author",
              "description": "The actor who authored the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "authorAssociation",
              "description": "Author's association with the subject of the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "baseRef",
              "description": "Identifies the base Ref associated with the pull request.",
              "type": {
                "name": "Ref"
              }
            },
            {
              "name": "baseRefName",
              "description": "Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.",
              "type": {
                "name": null
              }
            },
            {
              "name": "baseRefOid",
              "description": "Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted.",
              "type": {
                "name": null
              }
            },
            {
              "name": "body",
              "description": "Identifies the body of the pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyHTML",
              "description": "Identifies the body of the pull request rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyText",
              "description": "Identifies the body of the pull request rendered to text.",
              "type": {
                "name": null
              }
            },
            {
              "name": "changedFiles",
              "description": "The number of changed files in this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "closed",
              "description": "`true` if the pull request is closed",
              "type": {
                "name": null
              }
            },
            {
              "name": "closedAt",
              "description": "Identifies the date and time when the object was closed.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "comments",
              "description": "A list of comments associated with the pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commits",
              "description": "A list of commits present in this pull request's head branch not present in the base branch.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "type": {
                "name": null
              }
            },
            {
              "name": "deletions",
              "description": "The number of deletions in this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited this pull request's body.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "headRef",
              "description": "Identifies the head Ref associated with the pull request.",
              "type": {
                "name": "Ref"
              }
            },
            {
              "name": "headRefName",
              "description": "Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.",
              "type": {
                "name": null
              }
            },
            {
              "name": "headRefOid",
              "description": "Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted.",
              "type": {
                "name": null
              }
            },
            {
              "name": "headRepository",
              "description": "The repository associated with this pull request's head Ref.",
              "type": {
                "name": "Repository"
              }
            },
            {
              "name": "headRepositoryOwner",
              "description": "The owner of the repository associated with this pull request's head Ref.",
              "type": {
                "name": "RepositoryOwner"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isCrossRepository",
              "description": "The head and base repositories are different.",
              "type": {
                "name": null
              }
            },
            {
              "name": "labels",
              "description": "A list of labels associated with the object.",
              "type": {
                "name": "LabelConnection"
              }
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "locked",
              "description": "`true` if the pull request is locked",
              "type": {
                "name": null
              }
            },
            {
              "name": "mergeCommit",
              "description": "The commit that was created when this pull request was merged.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "mergeable",
              "description": "Whether or not the pull request can be merged based on the existence of merge conflicts.",
              "type": {
                "name": null
              }
            },
            {
              "name": "merged",
              "description": "Whether or not the pull request was merged.",
              "type": {
                "name": null
              }
            },
            {
              "name": "mergedAt",
              "description": "The date and time that the pull request was merged.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "milestone",
              "description": "Identifies the milestone associated with the pull request.",
              "type": {
                "name": "Milestone"
              }
            },
            {
              "name": "number",
              "description": "Identifies the pull request number.",
              "type": {
                "name": null
              }
            },
            {
              "name": "participants",
              "description": "A list of Users that are participating in the Pull Request conversation.",
              "type": {
                "name": null
              }
            },
            {
              "name": "potentialMergeCommit",
              "description": "The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the `mergeable` field for more details on the mergeability of the pull request.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "projectCards",
              "description": "List of project cards associated with this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies when the comment was published at.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "revertResourcePath",
              "description": "The HTTP path for reverting this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "revertUrl",
              "description": "The HTTP URL for reverting this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reviewRequests",
              "description": "A list of review requests associated with the pull request.",
              "type": {
                "name": "ReviewRequestConnection"
              }
            },
            {
              "name": "reviews",
              "description": "A list of reviews associated with the pull request.",
              "type": {
                "name": "PullRequestReviewConnection"
              }
            },
            {
              "name": "state",
              "description": "Identifies the state of the pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "suggestedReviewers",
              "description": "A list of reviewer suggestions based on commit history and past review comments.",
              "type": {
                "name": null
              }
            },
            {
              "name": "timeline",
              "description": "A list of events, comments, commits, etc. associated with the pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "title",
              "description": "Identifies the pull request title.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "userContentEdits",
              "description": "A list of edits to this content.",
              "type": {
                "name": "UserContentEditConnection"
              }
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanSubscribe",
              "description": "Check if the viewer is able to change their subscription status for the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCannotUpdateReasons",
              "description": "Reasons why the current viewer can not update this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerSubscription",
              "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Assignable",
              "description": "An object that can have users assigned to it.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Closable",
              "description": "An object that can be closed",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Comment",
              "description": "Represents a comment.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Updatable",
              "description": "Entities that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UpdatableComment",
              "description": "Comments that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Labelable",
              "description": "An object that can have labels assigned to it.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Lockable",
              "description": "An object that can be locked.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Subscribable",
              "description": "Entities that can be subscribed to for web and email notifications.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Lockable",
          "kind": "INTERFACE",
          "description": "An object that can be locked.",
          "fields": [
            {
              "name": "activeLockReason",
              "description": "Reason that the conversation was locked.",
              "type": {
                "name": "LockReason"
              }
            },
            {
              "name": "locked",
              "description": "`true` if the object is locked",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "LockReason",
          "kind": "ENUM",
          "description": "The possible reasons that an issue or pull request was locked.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Reactable",
          "kind": "INTERFACE",
          "description": "Represents a subject that can be reacted on.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "ReactionGroup",
          "kind": "OBJECT",
          "description": "A group of emoji reactions to a particular piece of content.",
          "fields": [
            {
              "name": "content",
              "description": "Identifies the emoji reaction.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies when the reaction was created.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "subject",
              "description": "The subject that was reacted to.",
              "type": {
                "name": null
              }
            },
            {
              "name": "users",
              "description": "Users who have reacted to the reaction subject with the emotion represented by this reaction group",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerHasReacted",
              "description": "Whether or not the authenticated user has left a reaction on the subject.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReactionContent",
          "kind": "ENUM",
          "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ReactingUserConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReactingUserEdge",
          "kind": "OBJECT",
          "description": "Represents a user that's made a reaction.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "reactedAt",
              "description": "The moment when the user made the reaction.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReactionConnection",
          "kind": "OBJECT",
          "description": "A list of reactions that have been left on the subject.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerHasReacted",
              "description": "Whether or not the authenticated user has left a reaction on the subject.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReactionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Reaction"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Reaction",
          "kind": "OBJECT",
          "description": "An emoji reaction to a particular piece of content.",
          "fields": [
            {
              "name": "content",
              "description": "Identifies the emoji reaction.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "reactable",
              "description": "The reactable piece of content",
              "type": {
                "name": null
              }
            },
            {
              "name": "user",
              "description": "Identifies the user who created this reaction.",
              "type": {
                "name": "User"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReactionOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of reactions can be ordered upon return.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ReactionOrderField",
          "kind": "ENUM",
          "description": "A list of fields that reactions can be ordered by.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RepositoryNode",
          "kind": "INTERFACE",
          "description": "Represents a object that belongs to a repository.",
          "fields": [
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "Subscribable",
          "kind": "INTERFACE",
          "description": "Entities that can be subscribed to for web and email notifications.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanSubscribe",
              "description": "Check if the viewer is able to change their subscription status for the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerSubscription",
              "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "SubscriptionState",
          "kind": "ENUM",
          "description": "The possible states of a subscription.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Ref",
          "kind": "OBJECT",
          "description": "Represents a Git reference.",
          "fields": [
            {
              "name": "associatedPullRequests",
              "description": "A list of pull requests with this ref as the head ref.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The ref name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "prefix",
              "description": "The ref's prefix, such as `refs/heads/` or `refs/tags/`.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository the ref belongs to.",
              "type": {
                "name": null
              }
            },
            {
              "name": "target",
              "description": "The object the ref points to.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "GitObject",
          "kind": "INTERFACE",
          "description": "Represents a Git object.",
          "fields": [
            {
              "name": "abbreviatedOid",
              "description": "An abbreviated version of the Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitResourcePath",
              "description": "The HTTP path for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitUrl",
              "description": "The HTTP URL for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The Repository the Git object belongs to",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "GitObjectID",
          "kind": "SCALAR",
          "description": "A Git object ID.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Blob",
          "kind": "OBJECT",
          "description": "Represents a Git blob.",
          "fields": [
            {
              "name": "abbreviatedOid",
              "description": "An abbreviated version of the Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "byteSize",
              "description": "Byte size of Blob object",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitResourcePath",
              "description": "The HTTP path for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitUrl",
              "description": "The HTTP URL for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isBinary",
              "description": "Indicates whether the Blob is binary or text",
              "type": {
                "name": null
              }
            },
            {
              "name": "isTruncated",
              "description": "Indicates whether the contents is truncated",
              "type": {
                "name": null
              }
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The Repository the Git object belongs to",
              "type": {
                "name": null
              }
            },
            {
              "name": "text",
              "description": "UTF8 text data or null if the Blob is binary",
              "type": {
                "name": "String"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "GitObject",
              "description": "Represents a Git object.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Commit",
          "kind": "OBJECT",
          "description": "Represents a Git commit.",
          "fields": [
            {
              "name": "abbreviatedOid",
              "description": "An abbreviated version of the Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "additions",
              "description": "The number of additions in this commit.",
              "type": {
                "name": null
              }
            },
            {
              "name": "author",
              "description": "Authorship details of the commit.",
              "type": {
                "name": "GitActor"
              }
            },
            {
              "name": "authoredByCommitter",
              "description": "Check if the committer and the author match.",
              "type": {
                "name": null
              }
            },
            {
              "name": "authoredDate",
              "description": "The datetime when this commit was authored.",
              "type": {
                "name": null
              }
            },
            {
              "name": "blame",
              "description": "Fetches `git blame` information.",
              "type": {
                "name": null
              }
            },
            {
              "name": "changedFiles",
              "description": "The number of changed files in this commit.",
              "type": {
                "name": null
              }
            },
            {
              "name": "comments",
              "description": "Comments made on the commit.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitResourcePath",
              "description": "The HTTP path for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitUrl",
              "description": "The HTTP URL for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "committedDate",
              "description": "The datetime when this commit was committed.",
              "type": {
                "name": null
              }
            },
            {
              "name": "committedViaWeb",
              "description": "Check if commited via GitHub web UI.",
              "type": {
                "name": null
              }
            },
            {
              "name": "committer",
              "description": "Committership details of the commit.",
              "type": {
                "name": "GitActor"
              }
            },
            {
              "name": "deletions",
              "description": "The number of deletions in this commit.",
              "type": {
                "name": null
              }
            },
            {
              "name": "history",
              "description": "The linear commit history starting from (and including) this commit, in the same order as `git log`.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "message",
              "description": "The Git commit message",
              "type": {
                "name": null
              }
            },
            {
              "name": "messageBody",
              "description": "The Git commit message body",
              "type": {
                "name": null
              }
            },
            {
              "name": "messageBodyHTML",
              "description": "The commit message body rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "messageHeadline",
              "description": "The Git commit message headline",
              "type": {
                "name": null
              }
            },
            {
              "name": "messageHeadlineHTML",
              "description": "The commit message headline rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "parents",
              "description": "The parents of a commit.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pushedDate",
              "description": "The datetime when this commit was pushed.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "repository",
              "description": "The Repository this commit belongs to",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this commit",
              "type": {
                "name": null
              }
            },
            {
              "name": "signature",
              "description": "Commit signing information, if present.",
              "type": {
                "name": "GitSignature"
              }
            },
            {
              "name": "status",
              "description": "Status information for this commit",
              "type": {
                "name": "Status"
              }
            },
            {
              "name": "tarballUrl",
              "description": "Returns a URL to download a tarball archive for a repository.                      Note: For private repositories, these links are temporary and expire after five minutes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "tree",
              "description": "Commit's root Tree",
              "type": {
                "name": null
              }
            },
            {
              "name": "treeResourcePath",
              "description": "The HTTP path for the tree of this commit",
              "type": {
                "name": null
              }
            },
            {
              "name": "treeUrl",
              "description": "The HTTP URL for the tree of this commit",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this commit",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanSubscribe",
              "description": "Check if the viewer is able to change their subscription status for the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerSubscription",
              "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.",
              "type": {
                "name": null
              }
            },
            {
              "name": "zipballUrl",
              "description": "Returns a URL to download a zipball archive for a repository.                      Note: For private repositories, these links are temporary and expire after five minutes.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "GitObject",
              "description": "Represents a Git object.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Subscribable",
              "description": "Entities that can be subscribed to for web and email notifications.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Tree",
          "kind": "OBJECT",
          "description": "Represents a Git tree.",
          "fields": [
            {
              "name": "abbreviatedOid",
              "description": "An abbreviated version of the Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitResourcePath",
              "description": "The HTTP path for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitUrl",
              "description": "The HTTP URL for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "entries",
              "description": "A list of tree entries.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The Repository the Git object belongs to",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "GitObject",
              "description": "Represents a Git object.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "TreeEntry",
          "kind": "OBJECT",
          "description": "Represents a Git tree entry.",
          "fields": [
            {
              "name": "mode",
              "description": "Entry file mode.",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "Entry file name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "object",
              "description": "Entry file object.",
              "type": {
                "name": "GitObject"
              }
            },
            {
              "name": "oid",
              "description": "Entry file Git object ID.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The Repository the tree entry belongs to",
              "type": {
                "name": null
              }
            },
            {
              "name": "type",
              "description": "Entry file type.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "GitActor",
          "kind": "OBJECT",
          "description": "Represents an actor in a Git commit (ie. an author or committer).",
          "fields": [
            {
              "name": "avatarUrl",
              "description": "A URL pointing to the author's public avatar.",
              "type": {
                "name": null
              }
            },
            {
              "name": "date",
              "description": "The timestamp of the Git action (authoring or committing).",
              "type": {
                "name": "GitTimestamp"
              }
            },
            {
              "name": "email",
              "description": "The email in the Git commit.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "name",
              "description": "The name in the Git commit.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "user",
              "description": "The GitHub user corresponding to the email field. Null if no such user exists.",
              "type": {
                "name": "User"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "GitTimestamp",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "CommitConnection",
          "kind": "OBJECT",
          "description": "The connection type for Commit.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "CommitEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Commit"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "CommitHistoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for Commit.",
          "fields": [
            {
              "name": "edges",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "CommitAuthor",
          "kind": "INPUT_OBJECT",
          "description": "Specifies an author for filtering Git commits.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "CommitCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for CommitComment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "CommitCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "CommitComment"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "CommitComment",
          "kind": "OBJECT",
          "description": "Represents a comment on a given Commit.",
          "fields": [
            {
              "name": "author",
              "description": "The actor who authored the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "authorAssociation",
              "description": "Author's association with the subject of the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "body",
              "description": "Identifies the comment body.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyHTML",
              "description": "Identifies the comment body rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the comment, if the commit exists.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "path",
              "description": "Identifies the file path associated with the comment.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "position",
              "description": "Identifies the line position associated with the comment.",
              "type": {
                "name": "Int"
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies when the comment was published at.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path permalink for this commit comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL permalink for this commit comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "userContentEdits",
              "description": "A list of edits to this content.",
              "type": {
                "name": "UserContentEditConnection"
              }
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCannotUpdateReasons",
              "description": "Reasons why the current viewer can not update this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Comment",
              "description": "Represents a comment.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Deletable",
              "description": "Entities that can be deleted.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Updatable",
              "description": "Entities that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UpdatableComment",
              "description": "Comments that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Deletable",
          "kind": "INTERFACE",
          "description": "Entities that can be deleted.",
          "fields": [
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this object.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "GitSignature",
          "kind": "INTERFACE",
          "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
          "fields": [
            {
              "name": "email",
              "description": "Email used to sign this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isValid",
              "description": "True if the signature is valid and verified by GitHub.",
              "type": {
                "name": null
              }
            },
            {
              "name": "payload",
              "description": "Payload for GPG signing object. Raw ODB object without the signature header.",
              "type": {
                "name": null
              }
            },
            {
              "name": "signature",
              "description": "ASCII-armored signature header from object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "signer",
              "description": "GitHub user corresponding to the email signing this commit.",
              "type": {
                "name": "User"
              }
            },
            {
              "name": "state",
              "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "GitSignatureState",
          "kind": "ENUM",
          "description": "The state of a Git signature.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Status",
          "kind": "OBJECT",
          "description": "Represents a commit status.",
          "fields": [
            {
              "name": "commit",
              "description": "The commit this status is attached to.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "context",
              "description": "Looks up an individual status context by context name.",
              "type": {
                "name": "StatusContext"
              }
            },
            {
              "name": "contexts",
              "description": "The individual status contexts for this commit.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "state",
              "description": "The combined commit status.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "StatusState",
          "kind": "ENUM",
          "description": "The possible commit status states.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "StatusContext",
          "kind": "OBJECT",
          "description": "Represents an individual commit status context",
          "fields": [
            {
              "name": "commit",
              "description": "This commit this status context is attached to.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "context",
              "description": "The name of this status context.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "creator",
              "description": "The actor who created this status context.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "description",
              "description": "The description for this status context.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "state",
              "description": "The state of this status context.",
              "type": {
                "name": null
              }
            },
            {
              "name": "targetUrl",
              "description": "The URL for this status context.",
              "type": {
                "name": "URI"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Blame",
          "kind": "OBJECT",
          "description": "Represents a Git blame.",
          "fields": [
            {
              "name": "ranges",
              "description": "The list of ranges from a Git blame.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "BlameRange",
          "kind": "OBJECT",
          "description": "Represents a range of information from a Git blame.",
          "fields": [
            {
              "name": "age",
              "description": "Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commit",
              "description": "Identifies the line author",
              "type": {
                "name": null
              }
            },
            {
              "name": "endingLine",
              "description": "The ending line for the range",
              "type": {
                "name": null
              }
            },
            {
              "name": "startingLine",
              "description": "The starting line for the range",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestState",
          "kind": "ENUM",
          "description": "The possible states of a pull request.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RepositoryOwner",
          "kind": "INTERFACE",
          "description": "Represents an owner of a Repository.",
          "fields": [
            {
              "name": "avatarUrl",
              "description": "A URL pointing to the owner's public avatar.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "login",
              "description": "The username used to login.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pinnedRepositories",
              "description": "A list of repositories this user has pinned to their profile",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositories",
              "description": "A list of repositories that the user owns.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "Find Repository.",
              "type": {
                "name": "Repository"
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP URL for the owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for the owner.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "RepositoryConnection",
          "kind": "OBJECT",
          "description": "A list of repositories owned by the subject.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalDiskUsage",
              "description": "The total size in kilobytes of all repositories in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RepositoryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Repository"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RepositoryPrivacy",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RepositoryOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for repository connections",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RepositoryOrderField",
          "kind": "ENUM",
          "description": "Properties by which repository connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RepositoryAffiliation",
          "kind": "ENUM",
          "description": "The affiliation of a user to a repository",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "Milestone",
          "kind": "OBJECT",
          "description": "Represents a Milestone object on a given repository.",
          "fields": [
            {
              "name": "closed",
              "description": "`true` if the object is closed (definition of closed may depend on type)",
              "type": {
                "name": null
              }
            },
            {
              "name": "closedAt",
              "description": "Identifies the date and time when the object was closed.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "creator",
              "description": "Identifies the actor who created the milestone.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "description",
              "description": "Identifies the description of the milestone.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "dueOn",
              "description": "Identifies the due date of the milestone.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "issues",
              "description": "A list of issues associated with the milestone.",
              "type": {
                "name": null
              }
            },
            {
              "name": "number",
              "description": "Identifies the number of the milestone.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequests",
              "description": "A list of pull requests associated with the milestone.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this milestone.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this milestone",
              "type": {
                "name": null
              }
            },
            {
              "name": "state",
              "description": "Identifies the state of the milestone.",
              "type": {
                "name": null
              }
            },
            {
              "name": "title",
              "description": "Identifies the title of the milestone.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this milestone",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Closable",
              "description": "An object that can be closed",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "MilestoneState",
          "kind": "ENUM",
          "description": "The possible states of a milestone.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "MergeableState",
          "kind": "ENUM",
          "description": "Whether or not a PullRequest can be merged.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "IssueCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for IssueComment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "IssueCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "IssueComment"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "IssueComment",
          "kind": "OBJECT",
          "description": "Represents a comment on an Issue.",
          "fields": [
            {
              "name": "author",
              "description": "The actor who authored the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "authorAssociation",
              "description": "Author's association with the subject of the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "body",
              "description": "Identifies the comment body.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyHTML",
              "description": "The comment body rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyText",
              "description": "Identifies the body of the issue rendered to text.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies when the comment was published at.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "pullRequest",
              "description": "Returns the pull request associated with the comment, if this comment was made on a\npull request.\n",
              "type": {
                "name": "PullRequest"
              }
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this issue comment",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this issue comment",
              "type": {
                "name": null
              }
            },
            {
              "name": "userContentEdits",
              "description": "A list of edits to this content.",
              "type": {
                "name": "UserContentEditConnection"
              }
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCannotUpdateReasons",
              "description": "Reasons why the current viewer can not update this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Comment",
              "description": "Represents a comment.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Deletable",
              "description": "Entities that can be deleted.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Updatable",
              "description": "Entities that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UpdatableComment",
              "description": "Comments that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "IssuePubSubTopic",
          "kind": "ENUM",
          "description": "The possible PubSub channels for an issue.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PullRequestReviewConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestReview.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestReviewEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "PullRequestReview"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestReview",
          "kind": "OBJECT",
          "description": "A review object for a given pull request.",
          "fields": [
            {
              "name": "author",
              "description": "The actor who authored the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "authorAssociation",
              "description": "Author's association with the subject of the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "body",
              "description": "Identifies the pull request review body.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyHTML",
              "description": "The body of this review rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyText",
              "description": "The body of this review rendered as plain text.",
              "type": {
                "name": null
              }
            },
            {
              "name": "comments",
              "description": "A list of review comments for the current pull request review.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with this pull request review.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies when the comment was published at.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "pullRequest",
              "description": "Identifies the pull request associated with this pull request review.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path permalink for this PullRequestReview.",
              "type": {
                "name": null
              }
            },
            {
              "name": "state",
              "description": "Identifies the current state of the pull request review.",
              "type": {
                "name": null
              }
            },
            {
              "name": "submittedAt",
              "description": "Identifies when the Pull Request Review was submitted",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL permalink for this PullRequestReview.",
              "type": {
                "name": null
              }
            },
            {
              "name": "userContentEdits",
              "description": "A list of edits to this content.",
              "type": {
                "name": "UserContentEditConnection"
              }
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCannotUpdateReasons",
              "description": "Reasons why the current viewer can not update this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Comment",
              "description": "Represents a comment.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Deletable",
              "description": "Entities that can be deleted.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Updatable",
              "description": "Entities that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UpdatableComment",
              "description": "Comments that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "PullRequestReviewState",
          "kind": "ENUM",
          "description": "The possible states of a pull request review.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PullRequestReviewCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestReviewComment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestReviewCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "PullRequestReviewComment"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestReviewComment",
          "kind": "OBJECT",
          "description": "A review comment associated with a given repository pull request.",
          "fields": [
            {
              "name": "author",
              "description": "The actor who authored the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "authorAssociation",
              "description": "Author's association with the subject of the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "body",
              "description": "The comment body of this review comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyHTML",
              "description": "The comment body of this review comment rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyText",
              "description": "The comment body of this review comment rendered as plain text.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies when the comment was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "type": {
                "name": null
              }
            },
            {
              "name": "diffHunk",
              "description": "The diff hunk to which the comment applies.",
              "type": {
                "name": null
              }
            },
            {
              "name": "draftedAt",
              "description": "Identifies when the comment was created in a draft state.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "originalCommit",
              "description": "Identifies the original commit associated with the comment.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "originalPosition",
              "description": "The original line index in the diff to which the comment applies.",
              "type": {
                "name": null
              }
            },
            {
              "name": "path",
              "description": "The path to which the comment applies.",
              "type": {
                "name": null
              }
            },
            {
              "name": "position",
              "description": "The line index in the diff to which the comment applies.",
              "type": {
                "name": "Int"
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies when the comment was published at.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "pullRequest",
              "description": "The pull request associated with this review comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequestReview",
              "description": "The pull request review associated with this review comment.",
              "type": {
                "name": "PullRequestReview"
              }
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "type": {
                "name": null
              }
            },
            {
              "name": "replyTo",
              "description": "The comment this is a reply to.",
              "type": {
                "name": "PullRequestReviewComment"
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path permalink for this review comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "updatedAt",
              "description": "Identifies when the comment was last updated.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL permalink for this review comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "userContentEdits",
              "description": "A list of edits to this content.",
              "type": {
                "name": "UserContentEditConnection"
              }
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCannotUpdateReasons",
              "description": "Reasons why the current viewer can not update this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Comment",
              "description": "Represents a comment.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Deletable",
              "description": "Entities that can be deleted.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Updatable",
              "description": "Entities that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UpdatableComment",
              "description": "Comments that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "PullRequestPubSubTopic",
          "kind": "ENUM",
          "description": "The possible PubSub channels for a pull request.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PullRequestReviewThread",
          "kind": "OBJECT",
          "description": "A threaded list of comments for a given pull request.",
          "fields": [
            {
              "name": "comments",
              "description": "A list of pull request comments associated with the thread.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "Identifies the pull request associated with this thread.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with this thread.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "TeamConnection",
          "kind": "OBJECT",
          "description": "The connection type for Team.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "TeamEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Team"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Team",
          "kind": "OBJECT",
          "description": "A team of users in an organization.",
          "fields": [
            {
              "name": "ancestors",
              "description": "A list of teams that are ancestors of this team.",
              "type": {
                "name": null
              }
            },
            {
              "name": "avatarUrl",
              "description": "A URL pointing to the team's avatar.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "childTeams",
              "description": "List of child teams belonging to this team",
              "type": {
                "name": null
              }
            },
            {
              "name": "combinedSlug",
              "description": "The slug corresponding to the organization and team.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "The description of the team.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "editTeamResourcePath",
              "description": "The HTTP path for editing this team",
              "type": {
                "name": null
              }
            },
            {
              "name": "editTeamUrl",
              "description": "The HTTP URL for editing this team",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "invitations",
              "description": "A list of pending invitations for users to this team",
              "type": {
                "name": "OrganizationInvitationConnection"
              }
            },
            {
              "name": "members",
              "description": "A list of users who are members of this team.",
              "type": {
                "name": null
              }
            },
            {
              "name": "membersResourcePath",
              "description": "The HTTP path for the team' members",
              "type": {
                "name": null
              }
            },
            {
              "name": "membersUrl",
              "description": "The HTTP URL for the team' members",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The name of the team.",
              "type": {
                "name": null
              }
            },
            {
              "name": "newTeamResourcePath",
              "description": "The HTTP path creating a new team",
              "type": {
                "name": null
              }
            },
            {
              "name": "newTeamUrl",
              "description": "The HTTP URL creating a new team",
              "type": {
                "name": null
              }
            },
            {
              "name": "organization",
              "description": "The organization that owns this team.",
              "type": {
                "name": null
              }
            },
            {
              "name": "parentTeam",
              "description": "The parent team of the team.",
              "type": {
                "name": "Team"
              }
            },
            {
              "name": "privacy",
              "description": "The level of privacy the team has.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositories",
              "description": "A list of repositories this team has access to.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositoriesResourcePath",
              "description": "The HTTP path for this team's repositories",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositoriesUrl",
              "description": "The HTTP URL for this team's repositories",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this team",
              "type": {
                "name": null
              }
            },
            {
              "name": "slug",
              "description": "The slug corresponding to the team.",
              "type": {
                "name": null
              }
            },
            {
              "name": "teamsResourcePath",
              "description": "The HTTP path for this team's teams",
              "type": {
                "name": null
              }
            },
            {
              "name": "teamsUrl",
              "description": "The HTTP URL for this team's teams",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this team",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanAdminister",
              "description": "Team is adminable by the viewer.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanSubscribe",
              "description": "Check if the viewer is able to change their subscription status for the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerSubscription",
              "description": "Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Subscribable",
              "description": "Entities that can be subscribed to for web and email notifications.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "TeamPrivacy",
          "kind": "ENUM",
          "description": "The possible team privacy values.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TeamMemberConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "TeamMemberEdge",
          "kind": "OBJECT",
          "description": "Represents a user who is a member of a team.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "memberAccessResourcePath",
              "description": "The HTTP path to the organization's member access page.",
              "type": {
                "name": null
              }
            },
            {
              "name": "memberAccessUrl",
              "description": "The HTTP URL to the organization's member access page.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "role",
              "description": "The role the member has on the team.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "TeamMemberRole",
          "kind": "ENUM",
          "description": "The possible team member roles; either 'maintainer' or 'member'.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TeamMembershipType",
          "kind": "ENUM",
          "description": "Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TeamRepositoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for Repository.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "TeamRepositoryEdge",
          "kind": "OBJECT",
          "description": "Represents a team repository.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "permission",
              "description": "The permission level the team has on the repository",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RepositoryPermission",
          "kind": "ENUM",
          "description": "The access level to a repository",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TeamRepositoryOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for team repository connections",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TeamRepositoryOrderField",
          "kind": "ENUM",
          "description": "Properties by which team repository connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ProjectConnection",
          "kind": "OBJECT",
          "description": "A list of projects associated with the owner.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ProjectEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Project"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ProjectOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of projects can be ordered upon return.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ProjectOrderField",
          "kind": "ENUM",
          "description": "Properties by which project connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "OrganizationInvitationConnection",
          "kind": "OBJECT",
          "description": "The connection type for OrganizationInvitation.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "OrganizationInvitationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "OrganizationInvitation"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "OrganizationInvitation",
          "kind": "OBJECT",
          "description": "An Invitation for a user to an organization.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "email",
              "description": "The email address of the user invited to the organization.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "invitationType",
              "description": "The type of invitation that was sent (e.g. email, user).",
              "type": {
                "name": null
              }
            },
            {
              "name": "invitee",
              "description": "The user who was invited to the organization.",
              "type": {
                "name": "User"
              }
            },
            {
              "name": "inviter",
              "description": "The user who created the invitation.",
              "type": {
                "name": null
              }
            },
            {
              "name": "organization",
              "description": "The organization the invite is for",
              "type": {
                "name": null
              }
            },
            {
              "name": "role",
              "description": "The user's pending role in the organization (e.g. member, owner).",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Organization",
          "kind": "OBJECT",
          "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
          "fields": [
            {
              "name": "avatarUrl",
              "description": "A URL pointing to the organization's public avatar.",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "The organization's public profile description.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "email",
              "description": "The organization's public email.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "location",
              "description": "The organization's public profile location.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "login",
              "description": "The organization's login name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "members",
              "description": "A list of users who are members of this organization.",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The organization's public profile name.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "newTeamResourcePath",
              "description": "The HTTP path creating a new team",
              "type": {
                "name": null
              }
            },
            {
              "name": "newTeamUrl",
              "description": "The HTTP URL creating a new team",
              "type": {
                "name": null
              }
            },
            {
              "name": "organizationBillingEmail",
              "description": "The billing email for the organization.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "pinnedRepositories",
              "description": "A list of repositories this user has pinned to their profile",
              "type": {
                "name": null
              }
            },
            {
              "name": "project",
              "description": "Find project by number.",
              "type": {
                "name": "Project"
              }
            },
            {
              "name": "projects",
              "description": "A list of projects under the owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "projectsResourcePath",
              "description": "The HTTP path listing organization's projects",
              "type": {
                "name": null
              }
            },
            {
              "name": "projectsUrl",
              "description": "The HTTP URL listing organization's projects",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositories",
              "description": "A list of repositories that the user owns.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "Find Repository.",
              "type": {
                "name": "Repository"
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this user",
              "type": {
                "name": null
              }
            },
            {
              "name": "samlIdentityProvider",
              "description": "The Organization's SAML Identity Providers",
              "type": {
                "name": "OrganizationIdentityProvider"
              }
            },
            {
              "name": "team",
              "description": "Find an organization's team by its slug.",
              "type": {
                "name": "Team"
              }
            },
            {
              "name": "teams",
              "description": "A list of teams in this organization.",
              "type": {
                "name": null
              }
            },
            {
              "name": "teamsResourcePath",
              "description": "The HTTP path listing organization's teams",
              "type": {
                "name": null
              }
            },
            {
              "name": "teamsUrl",
              "description": "The HTTP URL listing organization's teams",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this user",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanAdminister",
              "description": "Organization is adminable by the viewer.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanCreateProjects",
              "description": "Can the current viewer create new projects on this owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanCreateRepositories",
              "description": "Viewer can create repositories on this organization",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanCreateTeams",
              "description": "Viewer can create teams on this organization.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerIsAMember",
              "description": "Viewer is an active member of this organization.",
              "type": {
                "name": null
              }
            },
            {
              "name": "websiteUrl",
              "description": "The organization's public profile URL.",
              "type": {
                "name": "URI"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Actor",
              "description": "Represents an object which can take actions on GitHub. Typically a User or Bot.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "ProjectOwner",
              "description": "Represents an owner of a Project.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryOwner",
              "description": "Represents an owner of a Repository.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "MarketplaceListing",
          "kind": "OBJECT",
          "description": "A listing in the GitHub integration marketplace.",
          "fields": [
            {
              "name": "companyUrl",
              "description": "URL to the listing owner's company site.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "configurationResourcePath",
              "description": "The HTTP path for configuring access to the listing's integration or OAuth app",
              "type": {
                "name": null
              }
            },
            {
              "name": "configurationUrl",
              "description": "The HTTP URL for configuring access to the listing's integration or OAuth app",
              "type": {
                "name": null
              }
            },
            {
              "name": "documentationUrl",
              "description": "URL to the listing's documentation.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "extendedDescription",
              "description": "The listing's detailed description.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "extendedDescriptionHTML",
              "description": "The listing's detailed description rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "fullDescription",
              "description": "The listing's introductory description.",
              "type": {
                "name": null
              }
            },
            {
              "name": "fullDescriptionHTML",
              "description": "The listing's introductory description rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasApprovalBeenRequested",
              "description": "Whether this listing has been submitted for review from GitHub for approval to be displayed in the Marketplace.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasPublishedFreeTrialPlans",
              "description": "Does this listing have any plans with a free trial?",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasTermsOfService",
              "description": "Does this listing have a terms of service link?",
              "type": {
                "name": null
              }
            },
            {
              "name": "howItWorks",
              "description": "A technical description of how this app works with GitHub.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "howItWorksHTML",
              "description": "The listing's technical description rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "installationUrl",
              "description": "URL to install the product to the viewer's account or organization.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "installedForViewer",
              "description": "Whether this listing's app has been installed for the current viewer",
              "type": {
                "name": null
              }
            },
            {
              "name": "isApproved",
              "description": "Whether this listing has been approved for display in the Marketplace.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isDelisted",
              "description": "Whether this listing has been removed from the Marketplace.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isDraft",
              "description": "Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isPaid",
              "description": "Whether the product this listing represents is available as part of a paid plan.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isRejected",
              "description": "Whether this listing has been rejected by GitHub for display in the Marketplace.",
              "type": {
                "name": null
              }
            },
            {
              "name": "logoBackgroundColor",
              "description": "The hex color code, without the leading '#', for the logo background.",
              "type": {
                "name": null
              }
            },
            {
              "name": "logoUrl",
              "description": "URL for the listing's logo image.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "name",
              "description": "The listing's full name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "normalizedShortDescription",
              "description": "The listing's very short description without a trailing period or ampersands.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pricingUrl",
              "description": "URL to the listing's detailed pricing.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "primaryCategory",
              "description": "The category that best describes the listing.",
              "type": {
                "name": null
              }
            },
            {
              "name": "privacyPolicyUrl",
              "description": "URL to the listing's privacy policy.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for the Marketplace listing.",
              "type": {
                "name": null
              }
            },
            {
              "name": "screenshotUrls",
              "description": "The URLs for the listing's screenshots.",
              "type": {
                "name": null
              }
            },
            {
              "name": "secondaryCategory",
              "description": "An alternate category that describes the listing.",
              "type": {
                "name": "MarketplaceCategory"
              }
            },
            {
              "name": "shortDescription",
              "description": "The listing's very short description.",
              "type": {
                "name": null
              }
            },
            {
              "name": "slug",
              "description": "The short name of the listing used in its URL.",
              "type": {
                "name": null
              }
            },
            {
              "name": "statusUrl",
              "description": "URL to the listing's status page.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "supportEmail",
              "description": "An email address for support for this listing's app.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "supportUrl",
              "description": "Either a URL or an email address for support for this listing's app.",
              "type": {
                "name": null
              }
            },
            {
              "name": "termsOfServiceUrl",
              "description": "URL to the listing's terms of service.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for the Marketplace listing.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanAddPlans",
              "description": "Can the current viewer add plans for this Marketplace listing.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanApprove",
              "description": "Can the current viewer approve this Marketplace listing.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanDelist",
              "description": "Can the current viewer delist this Marketplace listing.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanEdit",
              "description": "Can the current viewer edit this Marketplace listing.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanEditCategories",
              "description": "Can the current viewer edit the primary and secondary category of this\nMarketplace listing.\n",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanEditPlans",
              "description": "Can the current viewer edit the plans for this Marketplace listing.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanRedraft",
              "description": "Can the current viewer return this Marketplace listing to draft state\nso it becomes editable again.\n",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanReject",
              "description": "Can the current viewer reject this Marketplace listing by returning it to\nan editable draft state or rejecting it entirely.\n",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanRequestApproval",
              "description": "Can the current viewer request this listing be reviewed for display in\nthe Marketplace.\n",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerHasPurchased",
              "description": "Indicates whether the current user has an active subscription to this Marketplace listing.\n",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerHasPurchasedForAllOrganizations",
              "description": "Indicates if the current user has purchased a subscription to this Marketplace listing\nfor all of the organizations the user owns.\n",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerIsListingAdmin",
              "description": "Does the current viewer role allow them to administer this Marketplace listing.\n",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "OrganizationConnection",
          "kind": "OBJECT",
          "description": "The connection type for Organization.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "OrganizationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Organization"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Bot",
          "kind": "OBJECT",
          "description": "A special type of user which takes actions on behalf of GitHub Apps.",
          "fields": [
            {
              "name": "avatarUrl",
              "description": "A URL pointing to the GitHub App's public avatar.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "login",
              "description": "The username of the actor.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this bot",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this bot",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Actor",
              "description": "Represents an object which can take actions on GitHub. Typically a User or Bot.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Float",
          "kind": "SCALAR",
          "description": "Represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "MarketplaceCategory",
          "kind": "OBJECT",
          "description": "A public description of a Marketplace category.",
          "fields": [
            {
              "name": "description",
              "description": "The category's description.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "howItWorks",
              "description": "The technical description of how apps listed in this category work with GitHub.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "name",
              "description": "The category's name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "primaryListingCount",
              "description": "How many Marketplace listings have this as their primary category.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this Marketplace category.",
              "type": {
                "name": null
              }
            },
            {
              "name": "secondaryListingCount",
              "description": "How many Marketplace listings have this as their secondary category.",
              "type": {
                "name": null
              }
            },
            {
              "name": "slug",
              "description": "The short name of the category used in its URL.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this Marketplace category.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "LanguageConnection",
          "kind": "OBJECT",
          "description": "A list of languages associated with the parent.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalSize",
              "description": "The total size in bytes of files written in that language.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "LanguageEdge",
          "kind": "OBJECT",
          "description": "Represents the language of a repository.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "size",
              "description": "The number of bytes of code written in the language.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Language",
          "kind": "OBJECT",
          "description": "Represents a given language found in repositories.",
          "fields": [
            {
              "name": "color",
              "description": "The color defined for the current language.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The name of the current language.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Date",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded date string.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "X509Certificate",
          "kind": "SCALAR",
          "description": "A valid x509 certificate string",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "OrganizationIdentityProvider",
          "kind": "OBJECT",
          "description": "An Identity Provider configured to provision SAML and SCIM identities for Organizations",
          "fields": [
            {
              "name": "digestMethod",
              "description": "The digest algorithm used to sign SAML requests for the Identity Provider.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "externalIdentities",
              "description": "External Identities provisioned by this Identity Provider",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "idpCertificate",
              "description": "The x509 certificate used by the Identity Provder to sign assertions and responses.",
              "type": {
                "name": "X509Certificate"
              }
            },
            {
              "name": "issuer",
              "description": "The Issuer Entity ID for the SAML Identity Provider",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "organization",
              "description": "Organization this Identity Provider belongs to",
              "type": {
                "name": "Organization"
              }
            },
            {
              "name": "signatureMethod",
              "description": "The signature algorithm used to sign SAML requests for the Identity Provider.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "ssoUrl",
              "description": "The URL endpoint for the Identity Provider's SAML SSO.",
              "type": {
                "name": "URI"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ExternalIdentityConnection",
          "kind": "OBJECT",
          "description": "The connection type for ExternalIdentity.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ExternalIdentityEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "ExternalIdentity"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ExternalIdentity",
          "kind": "OBJECT",
          "description": "An external identity provisioned by SAML SSO or SCIM.",
          "fields": [
            {
              "name": "guid",
              "description": "The GUID for this identity",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "organizationInvitation",
              "description": "Organization invitation for this SCIM-provisioned external identity",
              "type": {
                "name": "OrganizationInvitation"
              }
            },
            {
              "name": "samlIdentity",
              "description": "SAML Identity attributes",
              "type": {
                "name": "ExternalIdentitySamlAttributes"
              }
            },
            {
              "name": "scimIdentity",
              "description": "SCIM Identity attributes",
              "type": {
                "name": "ExternalIdentityScimAttributes"
              }
            },
            {
              "name": "user",
              "description": "User linked to this external identity",
              "type": {
                "name": "User"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ExternalIdentitySamlAttributes",
          "kind": "OBJECT",
          "description": "SAML attributes for the External Identity",
          "fields": [
            {
              "name": "nameId",
              "description": "The NameID of the SAML identity",
              "type": {
                "name": "String"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ExternalIdentityScimAttributes",
          "kind": "OBJECT",
          "description": "SCIM attributes for the External Identity",
          "fields": [
            {
              "name": "username",
              "description": "The userName of the SCIM identity",
              "type": {
                "name": "String"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DefaultRepositoryPermissionField",
          "kind": "ENUM",
          "description": "The possible default permissions for repositories.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TeamRole",
          "kind": "ENUM",
          "description": "The role of a user on a team.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TeamOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which team connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TeamOrderField",
          "kind": "ENUM",
          "description": "Properties by which team connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "GistConnection",
          "kind": "OBJECT",
          "description": "The connection type for Gist.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "GistEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Gist"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Gist",
          "kind": "OBJECT",
          "description": "A Gist.",
          "fields": [
            {
              "name": "comments",
              "description": "A list of comments associated with the gist",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "The gist description.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isPublic",
              "description": "Whether the gist is public or not.",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The gist name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "owner",
              "description": "The gist owner.",
              "type": {
                "name": "RepositoryOwner"
              }
            },
            {
              "name": "pushedAt",
              "description": "Identifies when the gist was last pushed to.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "stargazers",
              "description": "A list of users who have starred this starrable.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerHasStarred",
              "description": "Returns a boolean indicating whether the viewing user has starred this starrable.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Starrable",
              "description": "Things that can be starred.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Starrable",
          "kind": "INTERFACE",
          "description": "Things that can be starred.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "stargazers",
              "description": "A list of users who have starred this starrable.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerHasStarred",
              "description": "Returns a boolean indicating whether the viewing user has starred this starrable.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "StargazerConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "StargazerEdge",
          "kind": "OBJECT",
          "description": "Represents a user that's starred a repository.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "starredAt",
              "description": "Identifies when the item was starred.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "StarOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which star connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "StarOrderField",
          "kind": "ENUM",
          "description": "Properties by which star connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "GistCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for GistComment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "GistCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "GistComment"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "GistComment",
          "kind": "OBJECT",
          "description": "Represents a comment on an Gist.",
          "fields": [
            {
              "name": "author",
              "description": "The actor who authored the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "authorAssociation",
              "description": "Author's association with the gist.",
              "type": {
                "name": null
              }
            },
            {
              "name": "body",
              "description": "Identifies the comment body.",
              "type": {
                "name": null
              }
            },
            {
              "name": "bodyHTML",
              "description": "The comment body rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "type": {
                "name": null
              }
            },
            {
              "name": "editor",
              "description": "The actor who edited the comment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "gist",
              "description": "The associated gist.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies when the comment was published at.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "userContentEdits",
              "description": "A list of edits to this content.",
              "type": {
                "name": "UserContentEditConnection"
              }
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCanUpdate",
              "description": "Check if the current viewer can update this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerCannotUpdateReasons",
              "description": "Reasons why the current viewer can not update this comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Comment",
              "description": "Represents a comment.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Deletable",
              "description": "Entities that can be deleted.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "Updatable",
              "description": "Entities that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UpdatableComment",
              "description": "Comments that can be updated.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "GistPrivacy",
          "kind": "ENUM",
          "description": "The privacy of a Gist",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "GistOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for gist connections",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "GistOrderField",
          "kind": "ENUM",
          "description": "Properties by which gist connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RepositoryInvitation",
          "kind": "OBJECT",
          "description": "An invitation for a user to be added to a repository.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "invitee",
              "description": "The user who received the invitation.",
              "type": {
                "name": null
              }
            },
            {
              "name": "inviter",
              "description": "The user who created the invitation.",
              "type": {
                "name": null
              }
            },
            {
              "name": "permission",
              "description": "The permission granted on this repository by this invitation.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The Repository the user is invited to.",
              "type": {
                "name": "RepositoryInvitationRepository"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "RepositoryInvitationRepository",
          "kind": "OBJECT",
          "description": "A subset of repository info shared with potential collaborators.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "The description of the repository.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "descriptionHTML",
              "description": "The description of the repository rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "forkCount",
              "description": "Returns how many forks there are of this repository in the whole network.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasIssuesEnabled",
              "description": "Indicates if the repository has issues feature enabled.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasWikiEnabled",
              "description": "Indicates if the repository has wiki feature enabled.",
              "type": {
                "name": null
              }
            },
            {
              "name": "homepageUrl",
              "description": "The repository's URL.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "isArchived",
              "description": "Indicates if the repository is unmaintained.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isFork",
              "description": "Identifies if the repository is a fork.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isLocked",
              "description": "Indicates if the repository has been locked or not.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isMirror",
              "description": "Identifies if the repository is a mirror.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isPrivate",
              "description": "Identifies if the repository is private.",
              "type": {
                "name": null
              }
            },
            {
              "name": "licenseInfo",
              "description": "The license associated with the repository",
              "type": {
                "name": "License"
              }
            },
            {
              "name": "lockReason",
              "description": "The reason the repository has been locked.",
              "type": {
                "name": "RepositoryLockReason"
              }
            },
            {
              "name": "mirrorUrl",
              "description": "The repository's original mirror URL.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "name",
              "description": "The name of the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nameWithOwner",
              "description": "The repository's name with owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "owner",
              "description": "The owner of the repository associated with this invitation repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pushedAt",
              "description": "Identifies when the repository was last pushed to.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this repository",
              "type": {
                "name": null
              }
            },
            {
              "name": "shortDescriptionHTML",
              "description": "A description of the repository, rendered to HTML without any links in it.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this repository",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "RepositoryInfo",
              "description": "A subset of repository info.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "RepositoryInfo",
          "kind": "INTERFACE",
          "description": "A subset of repository info.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "The description of the repository.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "descriptionHTML",
              "description": "The description of the repository rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "forkCount",
              "description": "Returns how many forks there are of this repository in the whole network.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasIssuesEnabled",
              "description": "Indicates if the repository has issues feature enabled.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasWikiEnabled",
              "description": "Indicates if the repository has wiki feature enabled.",
              "type": {
                "name": null
              }
            },
            {
              "name": "homepageUrl",
              "description": "The repository's URL.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "isArchived",
              "description": "Indicates if the repository is unmaintained.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isFork",
              "description": "Identifies if the repository is a fork.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isLocked",
              "description": "Indicates if the repository has been locked or not.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isMirror",
              "description": "Identifies if the repository is a mirror.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isPrivate",
              "description": "Identifies if the repository is private.",
              "type": {
                "name": null
              }
            },
            {
              "name": "licenseInfo",
              "description": "The license associated with the repository",
              "type": {
                "name": "License"
              }
            },
            {
              "name": "lockReason",
              "description": "The reason the repository has been locked.",
              "type": {
                "name": "RepositoryLockReason"
              }
            },
            {
              "name": "mirrorUrl",
              "description": "The repository's original mirror URL.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "name",
              "description": "The name of the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nameWithOwner",
              "description": "The repository's name with owner.",
              "type": {
                "name": null
              }
            },
            {
              "name": "owner",
              "description": "The User owner of the repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pushedAt",
              "description": "Identifies when the repository was last pushed to.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this repository",
              "type": {
                "name": null
              }
            },
            {
              "name": "shortDescriptionHTML",
              "description": "A description of the repository, rendered to HTML without any links in it.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this repository",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": null
        },
        {
          "name": "RepositoryLockReason",
          "kind": "ENUM",
          "description": "The possible reasons a given repository could be in a locked state.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "License",
          "kind": "OBJECT",
          "description": "A respository's open source license",
          "fields": [
            {
              "name": "body",
              "description": "The full text of the license",
              "type": {
                "name": null
              }
            },
            {
              "name": "conditions",
              "description": "The conditions set by the license",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "A human-readable description of the license",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "featured",
              "description": "Whether the license should be featured",
              "type": {
                "name": null
              }
            },
            {
              "name": "hidden",
              "description": "Whether the license should be displayed in license pickers",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "implementation",
              "description": "Instructions on how to implement the license",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "key",
              "description": "The lowercased SPDX ID of the license",
              "type": {
                "name": null
              }
            },
            {
              "name": "limitations",
              "description": "The limitations set by the license",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The license full name specified by <https://spdx.org/licenses>",
              "type": {
                "name": null
              }
            },
            {
              "name": "nickname",
              "description": "Customary short name if applicable (e.g, GPLv3)",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "permissions",
              "description": "The permissions set by the license",
              "type": {
                "name": null
              }
            },
            {
              "name": "spdxId",
              "description": "Short identifier specified by <https://spdx.org/licenses>",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "url",
              "description": "URL to the license on <https://choosealicense.com>",
              "type": {
                "name": "URI"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "LicenseRule",
          "kind": "OBJECT",
          "description": "Describes a License's conditions, permissions, and limitations",
          "fields": [
            {
              "name": "description",
              "description": "A description of the rule",
              "type": {
                "name": null
              }
            },
            {
              "name": "key",
              "description": "The machine-readable rule key",
              "type": {
                "name": null
              }
            },
            {
              "name": "label",
              "description": "The human-readable rule label",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "OrganizationInvitationType",
          "kind": "ENUM",
          "description": "The possible organization invitation types.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "OrganizationInvitationRole",
          "kind": "ENUM",
          "description": "The possible organization invitation roles.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PullRequestCommitConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestCommit.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestCommitEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "PullRequestCommit"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestCommit",
          "kind": "OBJECT",
          "description": "Represents a Git commit part of a pull request.",
          "fields": [
            {
              "name": "commit",
              "description": "The Git commit object",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "The pull request this commit belongs to",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this pull request commit",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this pull request commit",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReviewRequestConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReviewRequest.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReviewRequestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "ReviewRequest"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReviewRequest",
          "kind": "OBJECT",
          "description": "A request for a user to review a pull request.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "Identifies the pull request associated with this review request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "requestedReviewer",
              "description": "The reviewer that is requested.",
              "type": {
                "name": "RequestedReviewer"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "RequestedReviewer",
          "kind": "UNION",
          "description": "Types that can be requested reviewers.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PullRequestTimelineConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestTimelineItem.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestTimelineItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "PullRequestTimelineItem"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PullRequestTimelineItem",
          "kind": "UNION",
          "description": "An item in an pull request timeline",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "CommitCommentThread",
          "kind": "OBJECT",
          "description": "A thread of comments on a commit.",
          "fields": [
            {
              "name": "comments",
              "description": "The comments that exist in this thread.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commit",
              "description": "The commit the comments were made on.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "path",
              "description": "The file the comments were made on.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "position",
              "description": "The position in the diff for the commit that the comment was made on.",
              "type": {
                "name": "Int"
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ClosedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'closed' event on any `Closable`.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "closable",
              "description": "Object that was closed.",
              "type": {
                "name": null
              }
            },
            {
              "name": "closer",
              "description": "Object which triggered the creation of this event.",
              "type": {
                "name": "Closer"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Closer",
          "kind": "UNION",
          "description": "The object which triggered a `ClosedEvent`.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ReopenedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'reopened' event on any `Closable`.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "closable",
              "description": "Object that was reopened.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "SubscribedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'subscribed' event on a given `Subscribable`.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "subscribable",
              "description": "Object referenced by event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "UnsubscribedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unsubscribed' event on a given `Subscribable`.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "subscribable",
              "description": "Object referenced by event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "MergedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'merged' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the `merge` event.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "mergeRef",
              "description": "Identifies the Ref associated with the `merge` event.",
              "type": {
                "name": "Ref"
              }
            },
            {
              "name": "mergeRefName",
              "description": "Identifies the name of the Ref associated with the `merge` event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this merged event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this merged event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReferencedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'referenced' event on a given `ReferencedSubject`.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the 'referenced' event.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "commitRepository",
              "description": "Identifies the repository associated with the 'referenced' event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isCrossRepository",
              "description": "Reference originated in a different repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isDirectReference",
              "description": "Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.",
              "type": {
                "name": null
              }
            },
            {
              "name": "subject",
              "description": "Object referenced by event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReferencedSubject",
          "kind": "UNION",
          "description": "Any referencable object",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "CrossReferencedEvent",
          "kind": "OBJECT",
          "description": "Represents a mention made by one issue or pull request to another.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isCrossRepository",
              "description": "Reference originated in a different repository.",
              "type": {
                "name": null
              }
            },
            {
              "name": "referencedAt",
              "description": "Identifies when the reference was made.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "source",
              "description": "Issue or pull request that made the reference.",
              "type": {
                "name": null
              }
            },
            {
              "name": "target",
              "description": "Issue or pull request to which the reference was made.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "willCloseTarget",
              "description": "Checks if the target will be closed when the source is merged.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "AssignedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'assigned' event on any assignable object.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "assignable",
              "description": "Identifies the assignable associated with the event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "user",
              "description": "Identifies the user who was assigned.",
              "type": {
                "name": "User"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "UnassignedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unassigned' event on any assignable object.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "assignable",
              "description": "Identifies the assignable associated with the event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "user",
              "description": "Identifies the subject (user) who was unassigned.",
              "type": {
                "name": "User"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "LabeledEvent",
          "kind": "OBJECT",
          "description": "Represents a 'labeled' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "label",
              "description": "Identifies the label associated with the 'labeled' event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "labelable",
              "description": "Identifies the `Labelable` associated with the event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "UnlabeledEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unlabeled' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "label",
              "description": "Identifies the label associated with the 'unlabeled' event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "labelable",
              "description": "Identifies the `Labelable` associated with the event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "MilestonedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'milestoned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "milestoneTitle",
              "description": "Identifies the milestone title associated with the 'milestoned' event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "subject",
              "description": "Object referenced by event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "MilestoneItem",
          "kind": "UNION",
          "description": "Types that can be inside a Milestone.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DemilestonedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'demilestoned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "milestoneTitle",
              "description": "Identifies the milestone title associated with the 'demilestoned' event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "subject",
              "description": "Object referenced by event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "RenamedTitleEvent",
          "kind": "OBJECT",
          "description": "Represents a 'renamed' event on a given issue or pull request",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "currentTitle",
              "description": "Identifies the current title of the issue or pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "previousTitle",
              "description": "Identifies the previous title of the issue or pull request.",
              "type": {
                "name": null
              }
            },
            {
              "name": "subject",
              "description": "Subject that was renamed.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "RenamedTitleSubject",
          "kind": "UNION",
          "description": "An object which has a renamable title",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "LockedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'locked' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "lockable",
              "description": "Object that was locked.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "UnlockedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'unlocked' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "lockable",
              "description": "Object that was unlocked.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "DeployedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'deployed' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "deployment",
              "description": "The deployment associated with the 'deployed' event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "ref",
              "description": "The ref associated with the 'deployed' event.",
              "type": {
                "name": "Ref"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Deployment",
          "kind": "OBJECT",
          "description": "Represents triggered deployment instance.",
          "fields": [
            {
              "name": "commit",
              "description": "Identifies the commit sha of the deployment.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "creator",
              "description": "Identifies the actor who triggered the deployment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "environment",
              "description": "The environment to which this deployment was made.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "latestStatus",
              "description": "The latest status of this deployment.",
              "type": {
                "name": "DeploymentStatus"
              }
            },
            {
              "name": "payload",
              "description": "Extra information that a deployment system might need.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the deployment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "state",
              "description": "The current state of the deployment.",
              "type": {
                "name": "DeploymentState"
              }
            },
            {
              "name": "statuses",
              "description": "A list of statuses associated with the deployment.",
              "type": {
                "name": "DeploymentStatusConnection"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "DeploymentStatusConnection",
          "kind": "OBJECT",
          "description": "The connection type for DeploymentStatus.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeploymentStatusEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "DeploymentStatus"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeploymentStatus",
          "kind": "OBJECT",
          "description": "Describes the status of a given deployment attempt.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "creator",
              "description": "Identifies the actor who triggered the deployment.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "deployment",
              "description": "Identifies the deployment associated with status.",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "Identifies the description of the deployment.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "environmentUrl",
              "description": "Identifies the environment URL of the deployment.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "logUrl",
              "description": "Identifies the log URL of the deployment.",
              "type": {
                "name": "URI"
              }
            },
            {
              "name": "state",
              "description": "Identifies the current state of the deployment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "DeploymentStatusState",
          "kind": "ENUM",
          "description": "The possible states for a deployment status.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DeploymentState",
          "kind": "ENUM",
          "description": "The possible states in which a deployment can be.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "HeadRefDeletedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_deleted' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "headRef",
              "description": "Identifies the Ref associated with the `head_ref_deleted` event.",
              "type": {
                "name": "Ref"
              }
            },
            {
              "name": "headRefName",
              "description": "Identifies the name of the Ref associated with the `head_ref_deleted` event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "HeadRefRestoredEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_restored' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "HeadRefForcePushedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_force_pushed' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "afterCommit",
              "description": "Identifies the after commit SHA for the 'head_ref_force_pushed' event.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "beforeCommit",
              "description": "Identifies the before commit SHA for the 'head_ref_force_pushed' event.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "ref",
              "description": "Identifies the fully qualified ref name for the 'head_ref_force_pushed' event.",
              "type": {
                "name": "Ref"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "BaseRefForcePushedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'base_ref_force_pushed' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "afterCommit",
              "description": "Identifies the after commit SHA for the 'base_ref_force_pushed' event.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "beforeCommit",
              "description": "Identifies the before commit SHA for the 'base_ref_force_pushed' event.",
              "type": {
                "name": "Commit"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "ref",
              "description": "Identifies the fully qualified ref name for the 'base_ref_force_pushed' event.",
              "type": {
                "name": "Ref"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReviewRequestedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'review_requested' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "requestedReviewer",
              "description": "Identifies the reviewer whose review was requested.",
              "type": {
                "name": "RequestedReviewer"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReviewRequestRemovedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'review_request_removed' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "requestedReviewer",
              "description": "Identifies the reviewer whose review request was removed.",
              "type": {
                "name": "RequestedReviewer"
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReviewDismissedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'review_dismissed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "message",
              "description": "Identifies the message associated with the 'review_dismissed' event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "messageHtml",
              "description": "The message associated with the event, rendered to HTML.",
              "type": {
                "name": null
              }
            },
            {
              "name": "previousReviewState",
              "description": "Identifies the previous state of the review with the 'review_dismissed' event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequest",
              "description": "PullRequest referenced by event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pullRequestCommit",
              "description": "Identifies the commit which caused the review to become stale.",
              "type": {
                "name": "PullRequestCommit"
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this review dismissed event.",
              "type": {
                "name": null
              }
            },
            {
              "name": "review",
              "description": "Identifies the review associated with the 'review_dismissed' event.",
              "type": {
                "name": "PullRequestReview"
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this review dismissed event.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "BaseRefChangedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'base_ref_changed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "AddedToProjectEvent",
          "kind": "OBJECT",
          "description": "Represents a 'added_to_project' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "CommentDeletedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'comment_deleted' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ConvertedNoteToIssueEvent",
          "kind": "OBJECT",
          "description": "Represents a 'converted_note_to_issue' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "IssueOrPullRequest",
          "kind": "UNION",
          "description": "Used for return value of Repository.issueOrPullRequest.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "MentionedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'mentioned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "MovedColumnsInProjectEvent",
          "kind": "OBJECT",
          "description": "Represents a 'moved_columns_in_project' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "RemovedFromProjectEvent",
          "kind": "OBJECT",
          "description": "Represents a 'removed_from_project' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor who performed the event.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "SuggestedReviewer",
          "kind": "OBJECT",
          "description": "A suggestion to review a pull request based on a user's commit history and review comments.",
          "fields": [
            {
              "name": "isAuthor",
              "description": "Is this suggestion based on past commits?",
              "type": {
                "name": null
              }
            },
            {
              "name": "isCommenter",
              "description": "Is this suggestion based on past review comments?",
              "type": {
                "name": null
              }
            },
            {
              "name": "reviewer",
              "description": "Identifies the user suggested to review the pull request.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "IssueTimelineConnection",
          "kind": "OBJECT",
          "description": "The connection type for IssueTimelineItem.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "IssueTimelineItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "IssueTimelineItem"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "IssueTimelineItem",
          "kind": "UNION",
          "description": "An item in an issue timeline",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "CollaboratorAffiliation",
          "kind": "ENUM",
          "description": "Collaborators affiliation level with a subject.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DeployKeyConnection",
          "kind": "OBJECT",
          "description": "The connection type for DeployKey.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeployKeyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "DeployKey"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeployKey",
          "kind": "OBJECT",
          "description": "A repository deploy key.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "key",
              "description": "The deploy key.",
              "type": {
                "name": null
              }
            },
            {
              "name": "readOnly",
              "description": "Whether or not the deploy key is read only.",
              "type": {
                "name": null
              }
            },
            {
              "name": "title",
              "description": "The deploy key title.",
              "type": {
                "name": null
              }
            },
            {
              "name": "verified",
              "description": "Whether or not the deploy key has been verified.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "RepositoryCollaboratorAffiliation",
          "kind": "ENUM",
          "description": "The affiliation type between collaborator and repository.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RepositoryTopicConnection",
          "kind": "OBJECT",
          "description": "The connection type for RepositoryTopic.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RepositoryTopicEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "RepositoryTopic"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RepositoryTopic",
          "kind": "OBJECT",
          "description": "A repository-topic connects a repository to a topic.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this repository-topic.",
              "type": {
                "name": null
              }
            },
            {
              "name": "topic",
              "description": "The topic.",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this repository-topic.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Topic",
          "kind": "OBJECT",
          "description": "A topic aggregates entities that are related to a subject.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The topic's name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "relatedTopics",
              "description": "A list of related topics, including aliases of this topic, sorted with the most relevant\nfirst.\n",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Release",
          "kind": "OBJECT",
          "description": "A release contains the content for a release.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the release",
              "type": {
                "name": "User"
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": "Identifies the description of the release.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isDraft",
              "description": "Whether or not the release is a draft",
              "type": {
                "name": null
              }
            },
            {
              "name": "isPrerelease",
              "description": "Whether or not the release is a prerelease",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "Identifies the title of the release.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "publishedAt",
              "description": "Identifies the date and time when the release was created.",
              "type": {
                "name": "DateTime"
              }
            },
            {
              "name": "releaseAssets",
              "description": "List of releases assets which are dependent on this release.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resourcePath",
              "description": "The HTTP path for this issue",
              "type": {
                "name": null
              }
            },
            {
              "name": "tag",
              "description": "The Git tag the release points to",
              "type": {
                "name": "Ref"
              }
            },
            {
              "name": "url",
              "description": "The HTTP URL for this issue",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReleaseAssetConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReleaseAsset.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReleaseAssetEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "ReleaseAsset"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReleaseAsset",
          "kind": "OBJECT",
          "description": "A release asset contains the content for a release asset.",
          "fields": [
            {
              "name": "contentType",
              "description": "The asset's content-type",
              "type": {
                "name": null
              }
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "type": {
                "name": null
              }
            },
            {
              "name": "downloadCount",
              "description": "The number of times this asset was downloaded",
              "type": {
                "name": null
              }
            },
            {
              "name": "downloadUrl",
              "description": "Identifies the URL where you can download the release asset via the browser.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "Identifies the title of the release asset.",
              "type": {
                "name": null
              }
            },
            {
              "name": "release",
              "description": "Release that the asset is associated with",
              "type": {
                "name": "Release"
              }
            },
            {
              "name": "size",
              "description": "The size (in bytes) of the asset",
              "type": {
                "name": null
              }
            },
            {
              "name": "uploadedBy",
              "description": "The user that performed the upload",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "Identifies the URL of the release asset.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ProtectedBranchConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProtectedBranch.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ProtectedBranchEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "ProtectedBranch"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ProtectedBranch",
          "kind": "OBJECT",
          "description": "A repository protected branch.",
          "fields": [
            {
              "name": "creator",
              "description": "The actor who created this protected branch.",
              "type": {
                "name": "Actor"
              }
            },
            {
              "name": "hasDismissableStaleReviews",
              "description": "Will new commits pushed to this branch dismiss pull request review approvals.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasRequiredReviews",
              "description": "Are reviews required to update this branch.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasRequiredStatusChecks",
              "description": "Are status checks required to update this branch.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasRestrictedPushes",
              "description": "Is pushing to this branch restricted.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasRestrictedReviewDismissals",
              "description": "Is dismissal of pull request reviews restricted.",
              "type": {
                "name": null
              }
            },
            {
              "name": "hasStrictRequiredStatusChecks",
              "description": "Are branches required to be up to date before merging.",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "isAdminEnforced",
              "description": "Can admins overwrite branch protection.",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "Identifies the name of the protected branch.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pushAllowances",
              "description": "A list push allowances for this protected branch.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The repository associated with this protected branch.",
              "type": {
                "name": null
              }
            },
            {
              "name": "requiredStatusCheckContexts",
              "description": "List of required status check contexts that must pass for commits to be accepted to this branch.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reviewDismissalAllowances",
              "description": "A list review dismissal allowances for this protected branch.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReviewDismissalAllowanceConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReviewDismissalAllowance.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReviewDismissalAllowanceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "ReviewDismissalAllowance"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReviewDismissalAllowance",
          "kind": "OBJECT",
          "description": "A team or user who has the ability to dismiss a review on a protected branch.",
          "fields": [
            {
              "name": "actor",
              "description": "The actor that can dismiss.",
              "type": {
                "name": "ReviewDismissalAllowanceActor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "protectedBranch",
              "description": "Identifies the protected branch associated with the allowed user or team.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "ReviewDismissalAllowanceActor",
          "kind": "UNION",
          "description": "Types that can be an actor.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PushAllowanceConnection",
          "kind": "OBJECT",
          "description": "The connection type for PushAllowance.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PushAllowanceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "PushAllowance"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PushAllowance",
          "kind": "OBJECT",
          "description": "A team or user who has the ability to push to a protected branch.",
          "fields": [
            {
              "name": "actor",
              "description": "The actor that can push.",
              "type": {
                "name": "PushAllowanceActor"
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "protectedBranch",
              "description": "Identifies the protected branch associated with the allowed user or team.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "PushAllowanceActor",
          "kind": "UNION",
          "description": "Types that can be an actor.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "MilestoneConnection",
          "kind": "OBJECT",
          "description": "The connection type for Milestone.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "MilestoneEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Milestone"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "MilestoneOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for milestone connections.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "MilestoneOrderField",
          "kind": "ENUM",
          "description": "Properties by which milestone connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "CodeOfConduct",
          "kind": "OBJECT",
          "description": "The Code of Conduct for a repository",
          "fields": [
            {
              "name": "body",
              "description": "The body of the CoC",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "key",
              "description": "The key for the CoC",
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": "The formal name of the CoC",
              "type": {
                "name": null
              }
            },
            {
              "name": "url",
              "description": "The path to the CoC",
              "type": {
                "name": "URI"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RepositoryCollaboratorConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RepositoryCollaboratorEdge",
          "kind": "OBJECT",
          "description": "Represents a user who is a collaborator of a repository.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "permission",
              "description": "The permission the user has on the repository.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "LanguageOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for language connections.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "LanguageOrderField",
          "kind": "ENUM",
          "description": "Properties by which language connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RefConnection",
          "kind": "OBJECT",
          "description": "The connection type for Ref.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RefEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Ref"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RefOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of git refs can be ordered upon return.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RefOrderField",
          "kind": "ENUM",
          "description": "Properties by which ref connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ReleaseConnection",
          "kind": "OBJECT",
          "description": "The connection type for Release.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReleaseEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Release"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "ReleaseOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of releases can be ordered upon return.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "ReleaseOrderField",
          "kind": "ENUM",
          "description": "Properties by which release connections can be ordered.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DeploymentConnection",
          "kind": "OBJECT",
          "description": "The connection type for Deployment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeploymentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Deployment"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "GitSSHRemote",
          "kind": "SCALAR",
          "description": "Git SSH string",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TopicConnection",
          "kind": "OBJECT",
          "description": "The connection type for Topic.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "TopicEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "Topic"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RepositoryContributionType",
          "kind": "ENUM",
          "description": "The reason a repository is listed as 'contributed'.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PublicKeyConnection",
          "kind": "OBJECT",
          "description": "The connection type for PublicKey.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PublicKeyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "PublicKey"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "PublicKey",
          "kind": "OBJECT",
          "description": "A user's public key.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "key",
              "description": "The public key string",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "FollowingConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "FollowerConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "StarredRepositoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for Repository.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "StarredRepositoryEdge",
          "kind": "OBJECT",
          "description": "Represents a starred repository.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "starredAt",
              "description": "Identifies when the item was starred.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RateLimit",
          "kind": "OBJECT",
          "description": "Represents the client's rate limit.",
          "fields": [
            {
              "name": "cost",
              "description": "The point cost for the current query counting against the rate limit.",
              "type": {
                "name": null
              }
            },
            {
              "name": "limit",
              "description": "The maximum number of points the client is permitted to consume in a 60 minute window.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodeCount",
              "description": "The maximum number of nodes this query may return",
              "type": {
                "name": null
              }
            },
            {
              "name": "remaining",
              "description": "The number of points remaining in the current rate limit window.",
              "type": {
                "name": null
              }
            },
            {
              "name": "resetAt",
              "description": "The time at which the current rate limit window resets in UTC epoch seconds.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "SearchResultItemConnection",
          "kind": "OBJECT",
          "description": "A list of results that matched against a search query.",
          "fields": [
            {
              "name": "codeCount",
              "description": "The number of pieces of code that matched the search query.",
              "type": {
                "name": null
              }
            },
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "issueCount",
              "description": "The number of issues that matched the search query.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repositoryCount",
              "description": "The number of repositories that matched the search query.",
              "type": {
                "name": null
              }
            },
            {
              "name": "userCount",
              "description": "The number of users that matched the search query.",
              "type": {
                "name": null
              }
            },
            {
              "name": "wikiCount",
              "description": "The number of wiki pages that matched the search query.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "SearchResultItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "SearchResultItem"
              }
            },
            {
              "name": "textMatches",
              "description": "Text matches on the result found.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "SearchResultItem",
          "kind": "UNION",
          "description": "The results of a search.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TextMatch",
          "kind": "OBJECT",
          "description": "A text match within a search result.",
          "fields": [
            {
              "name": "fragment",
              "description": "The specific text fragment within the property matched on.",
              "type": {
                "name": null
              }
            },
            {
              "name": "highlights",
              "description": "Highlights within the matched fragment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "property",
              "description": "The property matched on.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "TextMatchHighlight",
          "kind": "OBJECT",
          "description": "Represents a single highlight in a search result match.",
          "fields": [
            {
              "name": "beginIndice",
              "description": "The indice in the fragment where the matched text begins.",
              "type": {
                "name": null
              }
            },
            {
              "name": "endIndice",
              "description": "The indice in the fragment where the matched text ends.",
              "type": {
                "name": null
              }
            },
            {
              "name": "text",
              "description": "The text matched.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "SearchType",
          "kind": "ENUM",
          "description": "Represents the individual results of a search.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "MarketplaceListingConnection",
          "kind": "OBJECT",
          "description": "Look up Marketplace Listings",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "type": {
                "name": null
              }
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "type": {
                "name": null
              }
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "MarketplaceListingEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "type": {
                "name": null
              }
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "type": {
                "name": "MarketplaceListing"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "CollectionItemContent",
          "kind": "UNION",
          "description": "Types that can be inside Collection Items.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "GitHubMetadata",
          "kind": "OBJECT",
          "description": "Represents information about the GitHub instance.",
          "fields": [
            {
              "name": "gitHubServicesSha",
              "description": "Returns a String that's a SHA of `github-services`",
              "type": {
                "name": null
              }
            },
            {
              "name": "gitIpAddresses",
              "description": "IP addresses that users connect to for git operations",
              "type": {
                "name": null
              }
            },
            {
              "name": "hookIpAddresses",
              "description": "IP addresses that service hooks are sent from",
              "type": {
                "name": null
              }
            },
            {
              "name": "importerIpAddresses",
              "description": "IP addresses that the importer connects from",
              "type": {
                "name": null
              }
            },
            {
              "name": "isPasswordAuthenticationVerifiable",
              "description": "Whether or not users are verified",
              "type": {
                "name": null
              }
            },
            {
              "name": "pagesIpAddresses",
              "description": "IP addresses for GitHub Pages' A records",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "Mutation",
          "kind": "OBJECT",
          "description": "The root query for implementing GraphQL mutations.",
          "fields": [
            {
              "name": "acceptTopicSuggestion",
              "description": "Applies a suggested topic to the repository.",
              "type": {
                "name": "AcceptTopicSuggestionPayload"
              }
            },
            {
              "name": "addComment",
              "description": "Adds a comment to an Issue or Pull Request.",
              "type": {
                "name": "AddCommentPayload"
              }
            },
            {
              "name": "addProjectCard",
              "description": "Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both.",
              "type": {
                "name": "AddProjectCardPayload"
              }
            },
            {
              "name": "addProjectColumn",
              "description": "Adds a column to a Project.",
              "type": {
                "name": "AddProjectColumnPayload"
              }
            },
            {
              "name": "addPullRequestReview",
              "description": "Adds a review to a Pull Request.",
              "type": {
                "name": "AddPullRequestReviewPayload"
              }
            },
            {
              "name": "addPullRequestReviewComment",
              "description": "Adds a comment to a review.",
              "type": {
                "name": "AddPullRequestReviewCommentPayload"
              }
            },
            {
              "name": "addReaction",
              "description": "Adds a reaction to a subject.",
              "type": {
                "name": "AddReactionPayload"
              }
            },
            {
              "name": "addStar",
              "description": "Adds a star to a Starrable.",
              "type": {
                "name": "AddStarPayload"
              }
            },
            {
              "name": "createProject",
              "description": "Creates a new project.",
              "type": {
                "name": "CreateProjectPayload"
              }
            },
            {
              "name": "declineTopicSuggestion",
              "description": "Rejects a suggested topic for the repository.",
              "type": {
                "name": "DeclineTopicSuggestionPayload"
              }
            },
            {
              "name": "deleteProject",
              "description": "Deletes a project.",
              "type": {
                "name": "DeleteProjectPayload"
              }
            },
            {
              "name": "deleteProjectCard",
              "description": "Deletes a project card.",
              "type": {
                "name": "DeleteProjectCardPayload"
              }
            },
            {
              "name": "deleteProjectColumn",
              "description": "Deletes a project column.",
              "type": {
                "name": "DeleteProjectColumnPayload"
              }
            },
            {
              "name": "deletePullRequestReview",
              "description": "Deletes a pull request review.",
              "type": {
                "name": "DeletePullRequestReviewPayload"
              }
            },
            {
              "name": "dismissPullRequestReview",
              "description": "Dismisses an approved or rejected pull request review.",
              "type": {
                "name": "DismissPullRequestReviewPayload"
              }
            },
            {
              "name": "lockLockable",
              "description": "Lock a lockable object",
              "type": {
                "name": "LockLockablePayload"
              }
            },
            {
              "name": "moveProjectCard",
              "description": "Moves a project card to another place.",
              "type": {
                "name": "MoveProjectCardPayload"
              }
            },
            {
              "name": "moveProjectColumn",
              "description": "Moves a project column to another place.",
              "type": {
                "name": "MoveProjectColumnPayload"
              }
            },
            {
              "name": "removeOutsideCollaborator",
              "description": "Removes outside collaborator from all repositories in an organization.",
              "type": {
                "name": "RemoveOutsideCollaboratorPayload"
              }
            },
            {
              "name": "removeReaction",
              "description": "Removes a reaction from a subject.",
              "type": {
                "name": "RemoveReactionPayload"
              }
            },
            {
              "name": "removeStar",
              "description": "Removes a star from a Starrable.",
              "type": {
                "name": "RemoveStarPayload"
              }
            },
            {
              "name": "requestReviews",
              "description": "Set review requests on a pull request.",
              "type": {
                "name": "RequestReviewsPayload"
              }
            },
            {
              "name": "submitPullRequestReview",
              "description": "Submits a pending pull request review.",
              "type": {
                "name": "SubmitPullRequestReviewPayload"
              }
            },
            {
              "name": "updateProject",
              "description": "Updates an existing project.",
              "type": {
                "name": "UpdateProjectPayload"
              }
            },
            {
              "name": "updateProjectCard",
              "description": "Updates an existing project card.",
              "type": {
                "name": "UpdateProjectCardPayload"
              }
            },
            {
              "name": "updateProjectColumn",
              "description": "Updates an existing project column.",
              "type": {
                "name": "UpdateProjectColumnPayload"
              }
            },
            {
              "name": "updatePullRequestReview",
              "description": "Updates the body of a pull request review.",
              "type": {
                "name": "UpdatePullRequestReviewPayload"
              }
            },
            {
              "name": "updatePullRequestReviewComment",
              "description": "Updates a pull request review comment.",
              "type": {
                "name": "UpdatePullRequestReviewCommentPayload"
              }
            },
            {
              "name": "updateSubscription",
              "description": "Updates viewers repository subscription state.",
              "type": {
                "name": "UpdateSubscriptionPayload"
              }
            },
            {
              "name": "updateTopics",
              "description": "Replaces the repository's topics with the given topics.",
              "type": {
                "name": "UpdateTopicsPayload"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AddReactionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddReaction",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "reaction",
              "description": "The reaction object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "subject",
              "description": "The reactable subject.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AddReactionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddReaction",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RemoveReactionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveReaction",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "reaction",
              "description": "The reaction object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "subject",
              "description": "The reactable subject.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RemoveReactionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveReaction",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UpdateSubscriptionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateSubscription",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "subscribable",
              "description": "The input subscribable entity.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UpdateSubscriptionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateSubscription",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "AddCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddComment",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "commentEdge",
              "description": "The edge from the subject's comment connection.",
              "type": {
                "name": null
              }
            },
            {
              "name": "subject",
              "description": "The subject",
              "type": {
                "name": null
              }
            },
            {
              "name": "timelineEdge",
              "description": "The edge from the subject's timeline connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AddCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddComment",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "CreateProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateProject",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "project",
              "description": "The new project.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "CreateProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateProject",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UpdateProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProject",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "project",
              "description": "The updated project.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UpdateProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProject",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DeleteProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProject",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "owner",
              "description": "The repository or organization the project was removed from.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeleteProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProject",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "AddProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddProjectColumn",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "columnEdge",
              "description": "The edge from the project's column connection.",
              "type": {
                "name": null
              }
            },
            {
              "name": "project",
              "description": "The project",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AddProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddProjectColumn",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "MoveProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MoveProjectColumn",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "columnEdge",
              "description": "The new edge of the moved column.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "MoveProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MoveProjectColumn",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UpdateProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProjectColumn",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "projectColumn",
              "description": "The updated project column.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UpdateProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProjectColumn",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DeleteProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProjectColumn",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "deletedColumnId",
              "description": "The deleted column ID.",
              "type": {
                "name": null
              }
            },
            {
              "name": "project",
              "description": "The project the deleted column was in.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeleteProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProjectColumn",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "AddProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddProjectCard",
          "fields": [
            {
              "name": "cardEdge",
              "description": "The edge from the ProjectColumn's card connection.",
              "type": {
                "name": null
              }
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "projectColumn",
              "description": "The ProjectColumn",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AddProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddProjectCard",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UpdateProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProjectCard",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "projectCard",
              "description": "The updated ProjectCard.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UpdateProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProjectCard",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "MoveProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MoveProjectCard",
          "fields": [
            {
              "name": "cardEdge",
              "description": "The new edge of the moved card.",
              "type": {
                "name": null
              }
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "MoveProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MoveProjectCard",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DeleteProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProjectCard",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "column",
              "description": "The column the deleted card was in.",
              "type": {
                "name": null
              }
            },
            {
              "name": "deletedCardId",
              "description": "The deleted card ID.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeleteProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProjectCard",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "LockLockablePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of LockLockable",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "lockedRecord",
              "description": "The item that was locked.",
              "type": {
                "name": "Lockable"
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "LockLockableInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of LockLockable",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "AddPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "pullRequestReview",
              "description": "The newly created pull request review.",
              "type": {
                "name": null
              }
            },
            {
              "name": "reviewEdge",
              "description": "The edge from the pull request's review connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AddPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddPullRequestReview",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "PullRequestReviewEvent",
          "kind": "ENUM",
          "description": "The possible events to perform on a pull request review.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DraftPullRequestReviewComment",
          "kind": "INPUT_OBJECT",
          "description": "Specifies a review comment to be left with a Pull Request Review.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "SubmitPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SubmitPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "pullRequestReview",
              "description": "The submitted pull request review.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "SubmitPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SubmitPullRequestReview",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UpdatePullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdatePullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "pullRequestReview",
              "description": "The updated pull request review.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UpdatePullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdatePullRequestReview",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DismissPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DismissPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "pullRequestReview",
              "description": "The dismissed pull request review.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DismissPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DismissPullRequestReview",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DeletePullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeletePullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "pullRequestReview",
              "description": "The deleted pull request review.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeletePullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeletePullRequestReview",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "AddPullRequestReviewCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddPullRequestReviewComment",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "comment",
              "description": "The newly created comment.",
              "type": {
                "name": null
              }
            },
            {
              "name": "commentEdge",
              "description": "The edge from the review's comment connection.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AddPullRequestReviewCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddPullRequestReviewComment",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UpdatePullRequestReviewCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdatePullRequestReviewComment",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "pullRequestReviewComment",
              "description": "The updated comment.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UpdatePullRequestReviewCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdatePullRequestReviewComment",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RemoveOutsideCollaboratorPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveOutsideCollaborator",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "removedUser",
              "description": "The user that was removed as an outside collaborator.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RemoveOutsideCollaboratorInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveOutsideCollaborator",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RequestReviewsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RequestReviews",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "pullRequest",
              "description": "The pull request that is getting requests.",
              "type": {
                "name": null
              }
            },
            {
              "name": "requestedReviewersEdge",
              "description": "The edge from the pull request to the requested reviewers.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RequestReviewsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RequestReviews",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "AddStarPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddStar",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "starrable",
              "description": "The starrable.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AddStarInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddStar",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "RemoveStarPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveStar",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "starrable",
              "description": "The starrable.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "RemoveStarInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveStar",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "AcceptTopicSuggestionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AcceptTopicSuggestion",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "topic",
              "description": "The accepted topic.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "AcceptTopicSuggestionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AcceptTopicSuggestion",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "DeclineTopicSuggestionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeclineTopicSuggestion",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "topic",
              "description": "The declined topic.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "DeclineTopicSuggestionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeclineTopicSuggestion",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "TopicSuggestionDeclineReason",
          "kind": "ENUM",
          "description": "Reason that the suggested topic is declined.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "UpdateTopicsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateTopics",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "invalidTopicNames",
              "description": "Names of the provided topics that are not valid.",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The updated repository.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "UpdateTopicsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateTopics",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "__Schema",
          "kind": "OBJECT",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "directives",
              "description": "A list of all directives supported by this server.",
              "type": {
                "name": null
              }
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "type": {
                "name": "__Type"
              }
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "type": {
                "name": null
              }
            },
            {
              "name": "subscriptionType",
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "type": {
                "name": "__Type"
              }
            },
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "__Type",
          "kind": "OBJECT",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "description",
              "description": null,
              "type": {
                "name": "String"
              }
            },
            {
              "name": "enumValues",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "fields",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "inputFields",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "interfaces",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "kind",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": null,
              "type": {
                "name": "String"
              }
            },
            {
              "name": "ofType",
              "description": null,
              "type": {
                "name": "__Type"
              }
            },
            {
              "name": "possibleTypes",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "__Field",
          "kind": "OBJECT",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "args",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "deprecationReason",
              "description": null,
              "type": {
                "name": "String"
              }
            },
            {
              "name": "description",
              "description": null,
              "type": {
                "name": "String"
              }
            },
            {
              "name": "isDeprecated",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "type",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "__Directive",
          "kind": "OBJECT",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "args",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "description",
              "description": null,
              "type": {
                "name": "String"
              }
            },
            {
              "name": "locations",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "__EnumValue",
          "kind": "OBJECT",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "deprecationReason",
              "description": null,
              "type": {
                "name": "String"
              }
            },
            {
              "name": "description",
              "description": null,
              "type": {
                "name": "String"
              }
            },
            {
              "name": "isDeprecated",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "name",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "__InputValue",
          "kind": "OBJECT",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "description",
              "description": null,
              "type": {
                "name": "String"
              }
            },
            {
              "name": "name",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "type",
              "description": null,
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": []
        },
        {
          "name": "__TypeKind",
          "kind": "ENUM",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "__DirectiveLocation",
          "kind": "ENUM",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null,
          "interfaces": null
        },
        {
          "name": "GpgSignature",
          "kind": "OBJECT",
          "description": "Represents a GPG signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email",
              "description": "Email used to sign this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isValid",
              "description": "True if the signature is valid and verified by GitHub.",
              "type": {
                "name": null
              }
            },
            {
              "name": "keyId",
              "description": "Hex-encoded ID of the key that signed this object.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "payload",
              "description": "Payload for GPG signing object. Raw ODB object without the signature header.",
              "type": {
                "name": null
              }
            },
            {
              "name": "signature",
              "description": "ASCII-armored signature header from object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "signer",
              "description": "GitHub user corresponding to the email signing this commit.",
              "type": {
                "name": "User"
              }
            },
            {
              "name": "state",
              "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "GitSignature",
              "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "SmimeSignature",
          "kind": "OBJECT",
          "description": "Represents an S/MIME signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email",
              "description": "Email used to sign this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isValid",
              "description": "True if the signature is valid and verified by GitHub.",
              "type": {
                "name": null
              }
            },
            {
              "name": "payload",
              "description": "Payload for GPG signing object. Raw ODB object without the signature header.",
              "type": {
                "name": null
              }
            },
            {
              "name": "signature",
              "description": "ASCII-armored signature header from object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "signer",
              "description": "GitHub user corresponding to the email signing this commit.",
              "type": {
                "name": "User"
              }
            },
            {
              "name": "state",
              "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "GitSignature",
              "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "Tag",
          "kind": "OBJECT",
          "description": "Represents a Git tag.",
          "fields": [
            {
              "name": "abbreviatedOid",
              "description": "An abbreviated version of the Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitResourcePath",
              "description": "The HTTP path for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "commitUrl",
              "description": "The HTTP URL for this Git object",
              "type": {
                "name": null
              }
            },
            {
              "name": "id",
              "description": null,
              "type": {
                "name": null
              }
            },
            {
              "name": "message",
              "description": "The Git tag message.",
              "type": {
                "name": "String"
              }
            },
            {
              "name": "name",
              "description": "The Git tag name.",
              "type": {
                "name": null
              }
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "type": {
                "name": null
              }
            },
            {
              "name": "repository",
              "description": "The Repository the Git object belongs to",
              "type": {
                "name": null
              }
            },
            {
              "name": "tagger",
              "description": "Details about the tag author.",
              "type": {
                "name": "GitActor"
              }
            },
            {
              "name": "target",
              "description": "The Git object the tag points to.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "Node",
              "description": "An object with an ID.",
              "kind": "INTERFACE",
              "inputFields": null
            },
            {
              "name": "GitObject",
              "description": "Represents a Git object.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        },
        {
          "name": "UnknownSignature",
          "kind": "OBJECT",
          "description": "Represents an unknown signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email",
              "description": "Email used to sign this object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "isValid",
              "description": "True if the signature is valid and verified by GitHub.",
              "type": {
                "name": null
              }
            },
            {
              "name": "payload",
              "description": "Payload for GPG signing object. Raw ODB object without the signature header.",
              "type": {
                "name": null
              }
            },
            {
              "name": "signature",
              "description": "ASCII-armored signature header from object.",
              "type": {
                "name": null
              }
            },
            {
              "name": "signer",
              "description": "GitHub user corresponding to the email signing this commit.",
              "type": {
                "name": "User"
              }
            },
            {
              "name": "state",
              "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.",
              "type": {
                "name": null
              }
            }
          ],
          "interfaces": [
            {
              "name": "GitSignature",
              "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
              "kind": "INTERFACE",
              "inputFields": null
            }
          ]
        }
      ]
    }
  }
}